//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LibraryManagementSystem.Data.Datasets
{


	/// <summary>
	///Represents a strongly typed in-memory cache of data.
	///</summary>
	[global::System.Serializable()]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
	[global::System.Xml.Serialization.XmlRootAttribute("libraryDataSet")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
	public partial class libraryDataSet : global::System.Data.DataSet
	{

		private authorsDataTable tableauthors;

		private booksDataTable tablebooks;

		private borrowsDataTable tableborrows;

		private studentsDataTable tablestudents;

		private typesDataTable tabletypes;

		private global::System.Data.DataRelation relationFK_books_authors;

		private global::System.Data.DataRelation relationFK_books_types;

		private global::System.Data.DataRelation relationFK_borrows_books;

		private global::System.Data.DataRelation relationFK_borrows_students;

		private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public libraryDataSet()
		{
			this.BeginInit();
			this.InitClass();
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			base.Relations.CollectionChanged += schemaChangedHandler;
			this.EndInit();
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected libraryDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
				base(info, context, false)
		{
			if ((this.IsBinarySerialized(info, context) == true))
			{
				this.InitVars(false);
				global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
				this.Tables.CollectionChanged += schemaChangedHandler1;
				this.Relations.CollectionChanged += schemaChangedHandler1;
				return;
			}
			string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
			if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
			{
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
				if ((ds.Tables["authors"] != null))
				{
					base.Tables.Add(new authorsDataTable(ds.Tables["authors"]));
				}
				if ((ds.Tables["books"] != null))
				{
					base.Tables.Add(new booksDataTable(ds.Tables["books"]));
				}
				if ((ds.Tables["borrows"] != null))
				{
					base.Tables.Add(new borrowsDataTable(ds.Tables["borrows"]));
				}
				if ((ds.Tables["students"] != null))
				{
					base.Tables.Add(new studentsDataTable(ds.Tables["students"]));
				}
				if ((ds.Tables["types"] != null))
				{
					base.Tables.Add(new typesDataTable(ds.Tables["types"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
			}
			this.GetSerializationData(info, context);
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public authorsDataTable authors
		{
			get
			{
				return this.tableauthors;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public booksDataTable books
		{
			get
			{
				return this.tablebooks;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public borrowsDataTable borrows
		{
			get
			{
				return this.tableborrows;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public studentsDataTable students
		{
			get
			{
				return this.tablestudents;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public typesDataTable types
		{
			get
			{
				return this.tabletypes;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.BrowsableAttribute(true)]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
		public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
		{
			get
			{
				return this._schemaSerializationMode;
			}
			set
			{
				this._schemaSerializationMode = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
		public new global::System.Data.DataTableCollection Tables
		{
			get
			{
				return base.Tables;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
		public new global::System.Data.DataRelationCollection Relations
		{
			get
			{
				return base.Relations;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override void InitializeDerivedDataSet()
		{
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public override global::System.Data.DataSet Clone()
		{
			libraryDataSet cln = ((libraryDataSet)(base.Clone()));
			cln.InitVars();
			cln.SchemaSerializationMode = this.SchemaSerializationMode;
			return cln;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override bool ShouldSerializeTables()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override bool ShouldSerializeRelations()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
		{
			if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
			{
				this.Reset();
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXml(reader);
				if ((ds.Tables["authors"] != null))
				{
					base.Tables.Add(new authorsDataTable(ds.Tables["authors"]));
				}
				if ((ds.Tables["books"] != null))
				{
					base.Tables.Add(new booksDataTable(ds.Tables["books"]));
				}
				if ((ds.Tables["borrows"] != null))
				{
					base.Tables.Add(new borrowsDataTable(ds.Tables["borrows"]));
				}
				if ((ds.Tables["students"] != null))
				{
					base.Tables.Add(new studentsDataTable(ds.Tables["students"]));
				}
				if ((ds.Tables["types"] != null))
				{
					base.Tables.Add(new typesDataTable(ds.Tables["types"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXml(reader);
				this.InitVars();
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
		{
			global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
			this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
			stream.Position = 0;
			return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal void InitVars()
		{
			this.InitVars(true);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal void InitVars(bool initTable)
		{
			this.tableauthors = ((authorsDataTable)(base.Tables["authors"]));
			if ((initTable == true))
			{
				if ((this.tableauthors != null))
				{
					this.tableauthors.InitVars();
				}
			}
			this.tablebooks = ((booksDataTable)(base.Tables["books"]));
			if ((initTable == true))
			{
				if ((this.tablebooks != null))
				{
					this.tablebooks.InitVars();
				}
			}
			this.tableborrows = ((borrowsDataTable)(base.Tables["borrows"]));
			if ((initTable == true))
			{
				if ((this.tableborrows != null))
				{
					this.tableborrows.InitVars();
				}
			}
			this.tablestudents = ((studentsDataTable)(base.Tables["students"]));
			if ((initTable == true))
			{
				if ((this.tablestudents != null))
				{
					this.tablestudents.InitVars();
				}
			}
			this.tabletypes = ((typesDataTable)(base.Tables["types"]));
			if ((initTable == true))
			{
				if ((this.tabletypes != null))
				{
					this.tabletypes.InitVars();
				}
			}
			this.relationFK_books_authors = this.Relations["FK_books_authors"];
			this.relationFK_books_types = this.Relations["FK_books_types"];
			this.relationFK_borrows_books = this.Relations["FK_borrows_books"];
			this.relationFK_borrows_students = this.Relations["FK_borrows_students"];
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitClass()
		{
			this.DataSetName = "libraryDataSet";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/libraryDataSet.xsd";
			this.EnforceConstraints = true;
			this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
			this.tableauthors = new authorsDataTable();
			base.Tables.Add(this.tableauthors);
			this.tablebooks = new booksDataTable();
			base.Tables.Add(this.tablebooks);
			this.tableborrows = new borrowsDataTable();
			base.Tables.Add(this.tableborrows);
			this.tablestudents = new studentsDataTable();
			base.Tables.Add(this.tablestudents);
			this.tabletypes = new typesDataTable();
			base.Tables.Add(this.tabletypes);
			this.relationFK_books_authors = new global::System.Data.DataRelation("FK_books_authors", new global::System.Data.DataColumn[] {
						this.tableauthors.authorIdColumn}, new global::System.Data.DataColumn[] {
						this.tablebooks.authorIdColumn}, false);
			this.Relations.Add(this.relationFK_books_authors);
			this.relationFK_books_types = new global::System.Data.DataRelation("FK_books_types", new global::System.Data.DataColumn[] {
						this.tabletypes.typeIdColumn}, new global::System.Data.DataColumn[] {
						this.tablebooks.typeIdColumn}, false);
			this.Relations.Add(this.relationFK_books_types);
			this.relationFK_borrows_books = new global::System.Data.DataRelation("FK_borrows_books", new global::System.Data.DataColumn[] {
						this.tablebooks.bookIdColumn}, new global::System.Data.DataColumn[] {
						this.tableborrows.bookIdColumn}, false);
			this.Relations.Add(this.relationFK_borrows_books);
			this.relationFK_borrows_students = new global::System.Data.DataRelation("FK_borrows_students", new global::System.Data.DataColumn[] {
						this.tablestudents.studentIdColumn}, new global::System.Data.DataColumn[] {
						this.tableborrows.studentIdColumn}, false);
			this.Relations.Add(this.relationFK_borrows_students);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private bool ShouldSerializeauthors()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private bool ShouldSerializebooks()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private bool ShouldSerializeborrows()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private bool ShouldSerializestudents()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private bool ShouldSerializetypes()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
		{
			if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
			{
				this.InitVars();
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
		{
			libraryDataSet ds = new libraryDataSet();
			global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
			global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
			global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
			any.Namespace = ds.Namespace;
			sequence.Items.Add(any);
			type.Particle = sequence;
			global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
			if (xs.Contains(dsSchema.TargetNamespace))
			{
				global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
				global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
				try
				{
					global::System.Xml.Schema.XmlSchema schema = null;
					dsSchema.Write(s1);
					for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
					{
						schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
						s2.SetLength(0);
						schema.Write(s2);
						if ((s1.Length == s2.Length))
						{
							s1.Position = 0;
							s2.Position = 0;
							for (; ((s1.Position != s1.Length)
										&& (s1.ReadByte() == s2.ReadByte()));)
							{
								;
							}
							if ((s1.Position == s1.Length))
							{
								return type;
							}
						}
					}
				}
				finally
				{
					if ((s1 != null))
					{
						s1.Close();
					}
					if ((s2 != null))
					{
						s2.Close();
					}
				}
			}
			xs.Add(dsSchema);
			return type;
		}

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public delegate void authorsRowChangeEventHandler(object sender, authorsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public delegate void booksRowChangeEventHandler(object sender, booksRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public delegate void borrowsRowChangeEventHandler(object sender, borrowsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public delegate void studentsRowChangeEventHandler(object sender, studentsRowChangeEvent e);

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public delegate void typesRowChangeEventHandler(object sender, typesRowChangeEvent e);

		/// <summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable()]
		[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class authorsDataTable : global::System.Data.TypedTableBase<authorsRow>
		{

			private global::System.Data.DataColumn columnauthorId;

			private global::System.Data.DataColumn columnname;

			private global::System.Data.DataColumn columnsurname;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public authorsDataTable()
			{
				this.TableName = "authors";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal authorsDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if ((table.CaseSensitive != table.DataSet.CaseSensitive))
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace))
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected authorsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
					base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn authorIdColumn
			{
				get
				{
					return this.columnauthorId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn nameColumn
			{
				get
				{
					return this.columnname;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn surnameColumn
			{
				get
				{
					return this.columnsurname;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			[global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public authorsRow this[int index]
			{
				get
				{
					return ((authorsRow)(this.Rows[index]));
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event authorsRowChangeEventHandler authorsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event authorsRowChangeEventHandler authorsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event authorsRowChangeEventHandler authorsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event authorsRowChangeEventHandler authorsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void AddauthorsRow(authorsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public authorsRow AddauthorsRow(string name, string surname)
			{
				authorsRow rowauthorsRow = ((authorsRow)(this.NewRow()));
				object[] columnValuesArray = new object[] {
						null,
						name,
						surname};
				rowauthorsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowauthorsRow);
				return rowauthorsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public authorsRow FindByauthorId(int authorId)
			{
				return ((authorsRow)(this.Rows.Find(new object[] {
							authorId})));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				authorsDataTable cln = ((authorsDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new authorsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal void InitVars()
			{
				this.columnauthorId = base.Columns["authorId"];
				this.columnname = base.Columns["name"];
				this.columnsurname = base.Columns["surname"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			private void InitClass()
			{
				this.columnauthorId = new global::System.Data.DataColumn("authorId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnauthorId);
				this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnname);
				this.columnsurname = new global::System.Data.DataColumn("surname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsurname);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
								this.columnauthorId}, true));
				this.columnauthorId.AutoIncrement = true;
				this.columnauthorId.AutoIncrementSeed = -1;
				this.columnauthorId.AutoIncrementStep = -1;
				this.columnauthorId.AllowDBNull = false;
				this.columnauthorId.ReadOnly = true;
				this.columnauthorId.Unique = true;
				this.columnname.MaxLength = 50;
				this.columnsurname.MaxLength = 70;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public authorsRow NewauthorsRow()
			{
				return ((authorsRow)(this.NewRow()));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new authorsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(authorsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.authorsRowChanged != null))
				{
					this.authorsRowChanged(this, new authorsRowChangeEvent(((authorsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.authorsRowChanging != null))
				{
					this.authorsRowChanging(this, new authorsRowChangeEvent(((authorsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.authorsRowDeleted != null))
				{
					this.authorsRowDeleted(this, new authorsRowChangeEvent(((authorsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.authorsRowDeleting != null))
				{
					this.authorsRowDeleting(this, new authorsRowChangeEvent(((authorsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void RemoveauthorsRow(authorsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				libraryDataSet ds = new libraryDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "authorsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
						{
							schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
							s2.SetLength(0);
							schema.Write(s2);
							if ((s1.Length == s2.Length))
							{
								s1.Position = 0;
								s2.Position = 0;
								for (; ((s1.Position != s1.Length)
											&& (s1.ReadByte() == s2.ReadByte()));)
								{
									;
								}
								if ((s1.Position == s1.Length))
								{
									return type;
								}
							}
						}
					}
					finally
					{
						if ((s1 != null))
						{
							s1.Close();
						}
						if ((s2 != null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		/// <summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable()]
		[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class booksDataTable : global::System.Data.TypedTableBase<booksRow>
		{

			private global::System.Data.DataColumn columnbookId;

			private global::System.Data.DataColumn columnname;

			private global::System.Data.DataColumn columnpagecount;

			private global::System.Data.DataColumn columnpoint;

			private global::System.Data.DataColumn columnauthorId;

			private global::System.Data.DataColumn columntypeId;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksDataTable()
			{
				this.TableName = "books";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal booksDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if ((table.CaseSensitive != table.DataSet.CaseSensitive))
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace))
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected booksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
					base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn bookIdColumn
			{
				get
				{
					return this.columnbookId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn nameColumn
			{
				get
				{
					return this.columnname;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn pagecountColumn
			{
				get
				{
					return this.columnpagecount;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn pointColumn
			{
				get
				{
					return this.columnpoint;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn authorIdColumn
			{
				get
				{
					return this.columnauthorId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn typeIdColumn
			{
				get
				{
					return this.columntypeId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			[global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRow this[int index]
			{
				get
				{
					return ((booksRow)(this.Rows[index]));
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event booksRowChangeEventHandler booksRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event booksRowChangeEventHandler booksRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event booksRowChangeEventHandler booksRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event booksRowChangeEventHandler booksRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void AddbooksRow(booksRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRow AddbooksRow(string name, int pagecount, int point, authorsRow parentauthorsRowByFK_books_authors, typesRow parenttypesRowByFK_books_types)
			{
				booksRow rowbooksRow = ((booksRow)(this.NewRow()));
				object[] columnValuesArray = new object[] {
						null,
						name,
						pagecount,
						point,
						null,
						null};
				if ((parentauthorsRowByFK_books_authors != null))
				{
					columnValuesArray[4] = parentauthorsRowByFK_books_authors[0];
				}
				if ((parenttypesRowByFK_books_types != null))
				{
					columnValuesArray[5] = parenttypesRowByFK_books_types[0];
				}
				rowbooksRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowbooksRow);
				return rowbooksRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRow FindBybookId(int bookId)
			{
				return ((booksRow)(this.Rows.Find(new object[] {
							bookId})));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				booksDataTable cln = ((booksDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new booksDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal void InitVars()
			{
				this.columnbookId = base.Columns["bookId"];
				this.columnname = base.Columns["name"];
				this.columnpagecount = base.Columns["pagecount"];
				this.columnpoint = base.Columns["point"];
				this.columnauthorId = base.Columns["authorId"];
				this.columntypeId = base.Columns["typeId"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			private void InitClass()
			{
				this.columnbookId = new global::System.Data.DataColumn("bookId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnbookId);
				this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnname);
				this.columnpagecount = new global::System.Data.DataColumn("pagecount", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnpagecount);
				this.columnpoint = new global::System.Data.DataColumn("point", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnpoint);
				this.columnauthorId = new global::System.Data.DataColumn("authorId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnauthorId);
				this.columntypeId = new global::System.Data.DataColumn("typeId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columntypeId);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
								this.columnbookId}, true));
				this.columnbookId.AutoIncrement = true;
				this.columnbookId.AutoIncrementSeed = -1;
				this.columnbookId.AutoIncrementStep = -1;
				this.columnbookId.AllowDBNull = false;
				this.columnbookId.ReadOnly = true;
				this.columnbookId.Unique = true;
				this.columnname.MaxLength = 90;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRow NewbooksRow()
			{
				return ((booksRow)(this.NewRow()));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new booksRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(booksRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.booksRowChanged != null))
				{
					this.booksRowChanged(this, new booksRowChangeEvent(((booksRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.booksRowChanging != null))
				{
					this.booksRowChanging(this, new booksRowChangeEvent(((booksRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.booksRowDeleted != null))
				{
					this.booksRowDeleted(this, new booksRowChangeEvent(((booksRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.booksRowDeleting != null))
				{
					this.booksRowDeleting(this, new booksRowChangeEvent(((booksRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void RemovebooksRow(booksRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				libraryDataSet ds = new libraryDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "booksDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
						{
							schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
							s2.SetLength(0);
							schema.Write(s2);
							if ((s1.Length == s2.Length))
							{
								s1.Position = 0;
								s2.Position = 0;
								for (; ((s1.Position != s1.Length)
											&& (s1.ReadByte() == s2.ReadByte()));)
								{
									;
								}
								if ((s1.Position == s1.Length))
								{
									return type;
								}
							}
						}
					}
					finally
					{
						if ((s1 != null))
						{
							s1.Close();
						}
						if ((s2 != null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		/// <summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable()]
		[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class borrowsDataTable : global::System.Data.TypedTableBase<borrowsRow>
		{

			private global::System.Data.DataColumn columnborrowId;

			private global::System.Data.DataColumn columnstudentId;

			private global::System.Data.DataColumn columnbookId;

			private global::System.Data.DataColumn columntakenDate;

			private global::System.Data.DataColumn columnbroughtDate;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsDataTable()
			{
				this.TableName = "borrows";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal borrowsDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if ((table.CaseSensitive != table.DataSet.CaseSensitive))
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace))
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected borrowsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
					base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn borrowIdColumn
			{
				get
				{
					return this.columnborrowId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn studentIdColumn
			{
				get
				{
					return this.columnstudentId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn bookIdColumn
			{
				get
				{
					return this.columnbookId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn takenDateColumn
			{
				get
				{
					return this.columntakenDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn broughtDateColumn
			{
				get
				{
					return this.columnbroughtDate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			[global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsRow this[int index]
			{
				get
				{
					return ((borrowsRow)(this.Rows[index]));
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event borrowsRowChangeEventHandler borrowsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event borrowsRowChangeEventHandler borrowsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event borrowsRowChangeEventHandler borrowsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event borrowsRowChangeEventHandler borrowsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void AddborrowsRow(borrowsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsRow AddborrowsRow(studentsRow parentstudentsRowByFK_borrows_students, booksRow parentbooksRowByFK_borrows_books, System.DateTime takenDate, System.DateTime broughtDate)
			{
				borrowsRow rowborrowsRow = ((borrowsRow)(this.NewRow()));
				object[] columnValuesArray = new object[] {
						null,
						null,
						null,
						takenDate,
						broughtDate};
				if ((parentstudentsRowByFK_borrows_students != null))
				{
					columnValuesArray[1] = parentstudentsRowByFK_borrows_students[0];
				}
				if ((parentbooksRowByFK_borrows_books != null))
				{
					columnValuesArray[2] = parentbooksRowByFK_borrows_books[0];
				}
				rowborrowsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowborrowsRow);
				return rowborrowsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsRow FindByborrowId(int borrowId)
			{
				return ((borrowsRow)(this.Rows.Find(new object[] {
							borrowId})));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				borrowsDataTable cln = ((borrowsDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new borrowsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal void InitVars()
			{
				this.columnborrowId = base.Columns["borrowId"];
				this.columnstudentId = base.Columns["studentId"];
				this.columnbookId = base.Columns["bookId"];
				this.columntakenDate = base.Columns["takenDate"];
				this.columnbroughtDate = base.Columns["broughtDate"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			private void InitClass()
			{
				this.columnborrowId = new global::System.Data.DataColumn("borrowId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnborrowId);
				this.columnstudentId = new global::System.Data.DataColumn("studentId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstudentId);
				this.columnbookId = new global::System.Data.DataColumn("bookId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnbookId);
				this.columntakenDate = new global::System.Data.DataColumn("takenDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columntakenDate);
				this.columnbroughtDate = new global::System.Data.DataColumn("broughtDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnbroughtDate);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
								this.columnborrowId}, true));
				this.columnborrowId.AutoIncrement = true;
				this.columnborrowId.AutoIncrementSeed = -1;
				this.columnborrowId.AutoIncrementStep = -1;
				this.columnborrowId.AllowDBNull = false;
				this.columnborrowId.ReadOnly = true;
				this.columnborrowId.Unique = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsRow NewborrowsRow()
			{
				return ((borrowsRow)(this.NewRow()));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new borrowsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(borrowsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.borrowsRowChanged != null))
				{
					this.borrowsRowChanged(this, new borrowsRowChangeEvent(((borrowsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.borrowsRowChanging != null))
				{
					this.borrowsRowChanging(this, new borrowsRowChangeEvent(((borrowsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.borrowsRowDeleted != null))
				{
					this.borrowsRowDeleted(this, new borrowsRowChangeEvent(((borrowsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.borrowsRowDeleting != null))
				{
					this.borrowsRowDeleting(this, new borrowsRowChangeEvent(((borrowsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void RemoveborrowsRow(borrowsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				libraryDataSet ds = new libraryDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "borrowsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
						{
							schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
							s2.SetLength(0);
							schema.Write(s2);
							if ((s1.Length == s2.Length))
							{
								s1.Position = 0;
								s2.Position = 0;
								for (; ((s1.Position != s1.Length)
											&& (s1.ReadByte() == s2.ReadByte()));)
								{
									;
								}
								if ((s1.Position == s1.Length))
								{
									return type;
								}
							}
						}
					}
					finally
					{
						if ((s1 != null))
						{
							s1.Close();
						}
						if ((s2 != null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		/// <summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable()]
		[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class studentsDataTable : global::System.Data.TypedTableBase<studentsRow>
		{

			private global::System.Data.DataColumn columnstudentId;

			private global::System.Data.DataColumn columnname;

			private global::System.Data.DataColumn columnsurname;

			private global::System.Data.DataColumn columnbirthdate;

			private global::System.Data.DataColumn columngender;

			private global::System.Data.DataColumn columnclass;

			private global::System.Data.DataColumn columnpoint;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public studentsDataTable()
			{
				this.TableName = "students";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal studentsDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if ((table.CaseSensitive != table.DataSet.CaseSensitive))
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace))
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected studentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
					base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn studentIdColumn
			{
				get
				{
					return this.columnstudentId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn nameColumn
			{
				get
				{
					return this.columnname;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn surnameColumn
			{
				get
				{
					return this.columnsurname;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn birthdateColumn
			{
				get
				{
					return this.columnbirthdate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn genderColumn
			{
				get
				{
					return this.columngender;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn classColumn
			{
				get
				{
					return this.columnclass;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn pointColumn
			{
				get
				{
					return this.columnpoint;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			[global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public studentsRow this[int index]
			{
				get
				{
					return ((studentsRow)(this.Rows[index]));
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event studentsRowChangeEventHandler studentsRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event studentsRowChangeEventHandler studentsRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event studentsRowChangeEventHandler studentsRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event studentsRowChangeEventHandler studentsRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void AddstudentsRow(studentsRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public studentsRow AddstudentsRow(string name, string surname, System.DateTime birthdate, string gender, string _class, int point)
			{
				studentsRow rowstudentsRow = ((studentsRow)(this.NewRow()));
				object[] columnValuesArray = new object[] {
						null,
						name,
						surname,
						birthdate,
						gender,
						_class,
						point};
				rowstudentsRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowstudentsRow);
				return rowstudentsRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public studentsRow FindBystudentId(int studentId)
			{
				return ((studentsRow)(this.Rows.Find(new object[] {
							studentId})));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				studentsDataTable cln = ((studentsDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new studentsDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal void InitVars()
			{
				this.columnstudentId = base.Columns["studentId"];
				this.columnname = base.Columns["name"];
				this.columnsurname = base.Columns["surname"];
				this.columnbirthdate = base.Columns["birthdate"];
				this.columngender = base.Columns["gender"];
				this.columnclass = base.Columns["class"];
				this.columnpoint = base.Columns["point"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			private void InitClass()
			{
				this.columnstudentId = new global::System.Data.DataColumn("studentId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstudentId);
				this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnname);
				this.columnsurname = new global::System.Data.DataColumn("surname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsurname);
				this.columnbirthdate = new global::System.Data.DataColumn("birthdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnbirthdate);
				this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columngender);
				this.columnclass = new global::System.Data.DataColumn("class", typeof(string), null, global::System.Data.MappingType.Element);
				this.columnclass.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "classColumn");
				this.columnclass.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnclass");
				this.columnclass.ExtendedProperties.Add("Generator_UserColumnName", "class");
				base.Columns.Add(this.columnclass);
				this.columnpoint = new global::System.Data.DataColumn("point", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnpoint);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
								this.columnstudentId}, true));
				this.columnstudentId.AutoIncrement = true;
				this.columnstudentId.AutoIncrementSeed = -1;
				this.columnstudentId.AutoIncrementStep = -1;
				this.columnstudentId.AllowDBNull = false;
				this.columnstudentId.ReadOnly = true;
				this.columnstudentId.Unique = true;
				this.columnname.MaxLength = 20;
				this.columnsurname.MaxLength = 20;
				this.columngender.MaxLength = 10;
				this.columnclass.MaxLength = 7;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public studentsRow NewstudentsRow()
			{
				return ((studentsRow)(this.NewRow()));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new studentsRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(studentsRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.studentsRowChanged != null))
				{
					this.studentsRowChanged(this, new studentsRowChangeEvent(((studentsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.studentsRowChanging != null))
				{
					this.studentsRowChanging(this, new studentsRowChangeEvent(((studentsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.studentsRowDeleted != null))
				{
					this.studentsRowDeleted(this, new studentsRowChangeEvent(((studentsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.studentsRowDeleting != null))
				{
					this.studentsRowDeleting(this, new studentsRowChangeEvent(((studentsRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void RemovestudentsRow(studentsRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				libraryDataSet ds = new libraryDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "studentsDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
						{
							schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
							s2.SetLength(0);
							schema.Write(s2);
							if ((s1.Length == s2.Length))
							{
								s1.Position = 0;
								s2.Position = 0;
								for (; ((s1.Position != s1.Length)
											&& (s1.ReadByte() == s2.ReadByte()));)
								{
									;
								}
								if ((s1.Position == s1.Length))
								{
									return type;
								}
							}
						}
					}
					finally
					{
						if ((s1 != null))
						{
							s1.Close();
						}
						if ((s2 != null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		/// <summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable()]
		[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class typesDataTable : global::System.Data.TypedTableBase<typesRow>
		{

			private global::System.Data.DataColumn columntypeId;

			private global::System.Data.DataColumn columnname;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public typesDataTable()
			{
				this.TableName = "types";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal typesDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if ((table.CaseSensitive != table.DataSet.CaseSensitive))
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace))
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected typesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
					base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn typeIdColumn
			{
				get
				{
					return this.columntypeId;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn nameColumn
			{
				get
				{
					return this.columnname;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			[global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public typesRow this[int index]
			{
				get
				{
					return ((typesRow)(this.Rows[index]));
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event typesRowChangeEventHandler typesRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event typesRowChangeEventHandler typesRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event typesRowChangeEventHandler typesRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event typesRowChangeEventHandler typesRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void AddtypesRow(typesRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public typesRow AddtypesRow(string name)
			{
				typesRow rowtypesRow = ((typesRow)(this.NewRow()));
				object[] columnValuesArray = new object[] {
						null,
						name};
				rowtypesRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowtypesRow);
				return rowtypesRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public typesRow FindBytypeId(int typeId)
			{
				return ((typesRow)(this.Rows.Find(new object[] {
							typeId})));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				typesDataTable cln = ((typesDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new typesDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal void InitVars()
			{
				this.columntypeId = base.Columns["typeId"];
				this.columnname = base.Columns["name"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			private void InitClass()
			{
				this.columntypeId = new global::System.Data.DataColumn("typeId", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columntypeId);
				this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnname);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
								this.columntypeId}, true));
				this.columntypeId.AutoIncrement = true;
				this.columntypeId.AutoIncrementSeed = -1;
				this.columntypeId.AutoIncrementStep = -1;
				this.columntypeId.AllowDBNull = false;
				this.columntypeId.ReadOnly = true;
				this.columntypeId.Unique = true;
				this.columnname.MaxLength = 30;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public typesRow NewtypesRow()
			{
				return ((typesRow)(this.NewRow()));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new typesRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(typesRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.typesRowChanged != null))
				{
					this.typesRowChanged(this, new typesRowChangeEvent(((typesRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.typesRowChanging != null))
				{
					this.typesRowChanging(this, new typesRowChangeEvent(((typesRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.typesRowDeleted != null))
				{
					this.typesRowDeleted(this, new typesRowChangeEvent(((typesRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.typesRowDeleting != null))
				{
					this.typesRowDeleting(this, new typesRowChangeEvent(((typesRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void RemovetypesRow(typesRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				libraryDataSet ds = new libraryDataSet();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "typesDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
						{
							schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
							s2.SetLength(0);
							schema.Write(s2);
							if ((s1.Length == s2.Length))
							{
								s1.Position = 0;
								s2.Position = 0;
								for (; ((s1.Position != s1.Length)
											&& (s1.ReadByte() == s2.ReadByte()));)
								{
									;
								}
								if ((s1.Position == s1.Length))
								{
									return type;
								}
							}
						}
					}
					finally
					{
						if ((s1 != null))
						{
							s1.Close();
						}
						if ((s2 != null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		/// <summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class authorsRow : global::System.Data.DataRow
		{

			private authorsDataTable tableauthors;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal authorsRow(global::System.Data.DataRowBuilder rb) :
					base(rb)
			{
				this.tableauthors = ((authorsDataTable)(this.Table));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int authorId
			{
				get
				{
					return ((int)(this[this.tableauthors.authorIdColumn]));
				}
				set
				{
					this[this.tableauthors.authorIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string name
			{
				get
				{
					try
					{
						return ((string)(this[this.tableauthors.nameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'authors\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableauthors.nameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string surname
			{
				get
				{
					try
					{
						return ((string)(this[this.tableauthors.surnameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'surname\' in table \'authors\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableauthors.surnameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsnameNull()
			{
				return this.IsNull(this.tableauthors.nameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetnameNull()
			{
				this[this.tableauthors.nameColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IssurnameNull()
			{
				return this.IsNull(this.tableauthors.surnameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetsurnameNull()
			{
				this[this.tableauthors.surnameColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRow[] GetbooksRows()
			{
				if ((this.Table.ChildRelations["FK_books_authors"] == null))
				{
					return new booksRow[0];
				}
				else
				{
					return ((booksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_books_authors"])));
				}
			}
		}

		/// <summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class booksRow : global::System.Data.DataRow
		{

			private booksDataTable tablebooks;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal booksRow(global::System.Data.DataRowBuilder rb) :
					base(rb)
			{
				this.tablebooks = ((booksDataTable)(this.Table));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int bookId
			{
				get
				{
					return ((int)(this[this.tablebooks.bookIdColumn]));
				}
				set
				{
					this[this.tablebooks.bookIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string name
			{
				get
				{
					try
					{
						return ((string)(this[this.tablebooks.nameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'books\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablebooks.nameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int pagecount
			{
				get
				{
					try
					{
						return ((int)(this[this.tablebooks.pagecountColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'pagecount\' in table \'books\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablebooks.pagecountColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int point
			{
				get
				{
					try
					{
						return ((int)(this[this.tablebooks.pointColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'point\' in table \'books\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablebooks.pointColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int authorId
			{
				get
				{
					try
					{
						return ((int)(this[this.tablebooks.authorIdColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'authorId\' in table \'books\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablebooks.authorIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int typeId
			{
				get
				{
					try
					{
						return ((int)(this[this.tablebooks.typeIdColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'typeId\' in table \'books\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablebooks.typeIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public authorsRow authorsRow
			{
				get
				{
					return ((authorsRow)(this.GetParentRow(this.Table.ParentRelations["FK_books_authors"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_books_authors"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public typesRow typesRow
			{
				get
				{
					return ((typesRow)(this.GetParentRow(this.Table.ParentRelations["FK_books_types"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_books_types"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsnameNull()
			{
				return this.IsNull(this.tablebooks.nameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetnameNull()
			{
				this[this.tablebooks.nameColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IspagecountNull()
			{
				return this.IsNull(this.tablebooks.pagecountColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetpagecountNull()
			{
				this[this.tablebooks.pagecountColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IspointNull()
			{
				return this.IsNull(this.tablebooks.pointColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetpointNull()
			{
				this[this.tablebooks.pointColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsauthorIdNull()
			{
				return this.IsNull(this.tablebooks.authorIdColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetauthorIdNull()
			{
				this[this.tablebooks.authorIdColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IstypeIdNull()
			{
				return this.IsNull(this.tablebooks.typeIdColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SettypeIdNull()
			{
				this[this.tablebooks.typeIdColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsRow[] GetborrowsRows()
			{
				if ((this.Table.ChildRelations["FK_borrows_books"] == null))
				{
					return new borrowsRow[0];
				}
				else
				{
					return ((borrowsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_borrows_books"])));
				}
			}
		}

		/// <summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class borrowsRow : global::System.Data.DataRow
		{

			private borrowsDataTable tableborrows;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal borrowsRow(global::System.Data.DataRowBuilder rb) :
					base(rb)
			{
				this.tableborrows = ((borrowsDataTable)(this.Table));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int borrowId
			{
				get
				{
					return ((int)(this[this.tableborrows.borrowIdColumn]));
				}
				set
				{
					this[this.tableborrows.borrowIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int studentId
			{
				get
				{
					try
					{
						return ((int)(this[this.tableborrows.studentIdColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'studentId\' in table \'borrows\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableborrows.studentIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int bookId
			{
				get
				{
					try
					{
						return ((int)(this[this.tableborrows.bookIdColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'bookId\' in table \'borrows\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableborrows.bookIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public System.DateTime takenDate
			{
				get
				{
					try
					{
						return ((global::System.DateTime)(this[this.tableborrows.takenDateColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'takenDate\' in table \'borrows\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableborrows.takenDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public System.DateTime broughtDate
			{
				get
				{
					try
					{
						return ((global::System.DateTime)(this[this.tableborrows.broughtDateColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'broughtDate\' in table \'borrows\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableborrows.broughtDateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRow booksRow
			{
				get
				{
					return ((booksRow)(this.GetParentRow(this.Table.ParentRelations["FK_borrows_books"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_borrows_books"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public studentsRow studentsRow
			{
				get
				{
					return ((studentsRow)(this.GetParentRow(this.Table.ParentRelations["FK_borrows_students"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_borrows_students"]);
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsstudentIdNull()
			{
				return this.IsNull(this.tableborrows.studentIdColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetstudentIdNull()
			{
				this[this.tableborrows.studentIdColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsbookIdNull()
			{
				return this.IsNull(this.tableborrows.bookIdColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetbookIdNull()
			{
				this[this.tableborrows.bookIdColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IstakenDateNull()
			{
				return this.IsNull(this.tableborrows.takenDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SettakenDateNull()
			{
				this[this.tableborrows.takenDateColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsbroughtDateNull()
			{
				return this.IsNull(this.tableborrows.broughtDateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetbroughtDateNull()
			{
				this[this.tableborrows.broughtDateColumn] = global::System.Convert.DBNull;
			}
		}

		/// <summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class studentsRow : global::System.Data.DataRow
		{

			private studentsDataTable tablestudents;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal studentsRow(global::System.Data.DataRowBuilder rb) :
					base(rb)
			{
				this.tablestudents = ((studentsDataTable)(this.Table));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int studentId
			{
				get
				{
					return ((int)(this[this.tablestudents.studentIdColumn]));
				}
				set
				{
					this[this.tablestudents.studentIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string name
			{
				get
				{
					try
					{
						return ((string)(this[this.tablestudents.nameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'students\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablestudents.nameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string surname
			{
				get
				{
					try
					{
						return ((string)(this[this.tablestudents.surnameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'surname\' in table \'students\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablestudents.surnameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public System.DateTime birthdate
			{
				get
				{
					try
					{
						return ((global::System.DateTime)(this[this.tablestudents.birthdateColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'birthdate\' in table \'students\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablestudents.birthdateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string gender
			{
				get
				{
					try
					{
						return ((string)(this[this.tablestudents.genderColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'students\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablestudents.genderColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string _class
			{
				get
				{
					try
					{
						return ((string)(this[this.tablestudents.classColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'class\' in table \'students\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablestudents.classColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int point
			{
				get
				{
					try
					{
						return ((int)(this[this.tablestudents.pointColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'point\' in table \'students\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tablestudents.pointColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsnameNull()
			{
				return this.IsNull(this.tablestudents.nameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetnameNull()
			{
				this[this.tablestudents.nameColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IssurnameNull()
			{
				return this.IsNull(this.tablestudents.surnameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetsurnameNull()
			{
				this[this.tablestudents.surnameColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsbirthdateNull()
			{
				return this.IsNull(this.tablestudents.birthdateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetbirthdateNull()
			{
				this[this.tablestudents.birthdateColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsgenderNull()
			{
				return this.IsNull(this.tablestudents.genderColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetgenderNull()
			{
				this[this.tablestudents.genderColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool Is_classNull()
			{
				return this.IsNull(this.tablestudents.classColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void Set_classNull()
			{
				this[this.tablestudents.classColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IspointNull()
			{
				return this.IsNull(this.tablestudents.pointColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetpointNull()
			{
				this[this.tablestudents.pointColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsRow[] GetborrowsRows()
			{
				if ((this.Table.ChildRelations["FK_borrows_students"] == null))
				{
					return new borrowsRow[0];
				}
				else
				{
					return ((borrowsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_borrows_students"])));
				}
			}
		}

		/// <summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class typesRow : global::System.Data.DataRow
		{

			private typesDataTable tabletypes;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal typesRow(global::System.Data.DataRowBuilder rb) :
					base(rb)
			{
				this.tabletypes = ((typesDataTable)(this.Table));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int typeId
			{
				get
				{
					return ((int)(this[this.tabletypes.typeIdColumn]));
				}
				set
				{
					this[this.tabletypes.typeIdColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string name
			{
				get
				{
					try
					{
						return ((string)(this[this.tabletypes.nameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'types\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tabletypes.nameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public bool IsnameNull()
			{
				return this.IsNull(this.tabletypes.nameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void SetnameNull()
			{
				this[this.tabletypes.nameColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRow[] GetbooksRows()
			{
				if ((this.Table.ChildRelations["FK_books_types"] == null))
				{
					return new booksRow[0];
				}
				else
				{
					return ((booksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_books_types"])));
				}
			}
		}

		/// <summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public class authorsRowChangeEvent : global::System.EventArgs
		{

			private authorsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public authorsRowChangeEvent(authorsRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public authorsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		/// <summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public class booksRowChangeEvent : global::System.EventArgs
		{

			private booksRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRowChangeEvent(booksRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public booksRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		/// <summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public class borrowsRowChangeEvent : global::System.EventArgs
		{

			private borrowsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsRowChangeEvent(borrowsRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public borrowsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		/// <summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public class studentsRowChangeEvent : global::System.EventArgs
		{

			private studentsRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public studentsRowChangeEvent(studentsRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public studentsRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}

		/// <summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public class typesRowChangeEvent : global::System.EventArgs
		{

			private typesRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public typesRowChangeEvent(typesRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public typesRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
	}
}
namespace LibraryManagementSystem.Data.Datasets.libraryDataSetTableAdapters
{


	/// <summary>
	///Represents the connection and commands used to retrieve and save data.
	///</summary>
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.ComponentModel.DataObjectAttribute(true)]
	[global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
	public partial class authorsTableAdapter : global::System.ComponentModel.Component
	{

		private global::System.Data.SqlClient.SqlDataAdapter _adapter;

		private global::System.Data.SqlClient.SqlConnection _connection;

		private global::System.Data.SqlClient.SqlTransaction _transaction;

		private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

		private bool _clearBeforeFill;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public authorsTableAdapter()
		{
			this.ClearBeforeFill = true;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
		{
			get
			{
				if ((this._adapter == null))
				{
					this.InitAdapter();
				}
				return this._adapter;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlConnection Connection
		{
			get
			{
				if ((this._connection == null))
				{
					this.InitConnection();
				}
				return this._connection;
			}
			set
			{
				this._connection = value;
				if ((this.Adapter.InsertCommand != null))
				{
					this.Adapter.InsertCommand.Connection = value;
				}
				if ((this.Adapter.DeleteCommand != null))
				{
					this.Adapter.DeleteCommand.Connection = value;
				}
				if ((this.Adapter.UpdateCommand != null))
				{
					this.Adapter.UpdateCommand.Connection = value;
				}
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					if ((this.CommandCollection[i] != null))
					{
						((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
					}
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlTransaction Transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				this._transaction = value;
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					this.CommandCollection[i].Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.DeleteCommand != null)))
				{
					this.Adapter.DeleteCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.InsertCommand != null)))
				{
					this.Adapter.InsertCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.UpdateCommand != null)))
				{
					this.Adapter.UpdateCommand.Transaction = this._transaction;
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
		{
			get
			{
				if ((this._commandCollection == null))
				{
					this.InitCommandCollection();
				}
				return this._commandCollection;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public bool ClearBeforeFill
		{
			get
			{
				return this._clearBeforeFill;
			}
			set
			{
				this._clearBeforeFill = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitAdapter()
		{
			this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
			global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
			tableMapping.SourceTable = "Table";
			tableMapping.DataSetTable = "authors";
			tableMapping.ColumnMappings.Add("authorId", "authorId");
			tableMapping.ColumnMappings.Add("name", "name");
			tableMapping.ColumnMappings.Add("surname", "surname");
			this._adapter.TableMappings.Add(tableMapping);
			this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.DeleteCommand.Connection = this.Connection;
			this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[authors] WHERE (([authorId] = @Original_authorId) AND ((@IsNul" +
				"l_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_surna" +
				"me = 1 AND [surname] IS NULL) OR ([surname] = @Original_surname)))";
			this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_authorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_surname", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.InsertCommand.Connection = this.Connection;
			this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[authors] ([name], [surname]) VALUES (@name, @surname);\r\nSELECT" +
				" authorId, name, surname FROM authors WHERE (authorId = SCOPE_IDENTITY())";
			this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.UpdateCommand.Connection = this.Connection;
			this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[authors] SET [name] = @name, [surname] = @surname WHERE (([authorId] = @Original_authorId) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_surname = 1 AND [surname] IS NULL) OR ([surname] = @Original_surname)));
SELECT authorId, name, surname FROM authors WHERE (authorId = @authorId)";
			this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_authorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_surname", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@authorId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitConnection()
		{
			this._connection = new global::System.Data.SqlClient.SqlConnection();
			this._connection.ConnectionString = global::LibraryManagementSystem.Properties.Settings.Default.libraryConnectionString;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitCommandCollection()
		{
			this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
			this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
			this._commandCollection[0].Connection = this.Connection;
			this._commandCollection[0].CommandText = "SELECT authorId, name, surname FROM dbo.authors";
			this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
		public virtual int Fill(libraryDataSet.authorsDataTable dataTable)
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			if ((this.ClearBeforeFill == true))
			{
				dataTable.Clear();
			}
			int returnValue = this.Adapter.Fill(dataTable);
			return returnValue;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
		public virtual libraryDataSet.authorsDataTable GetData()
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			libraryDataSet.authorsDataTable dataTable = new libraryDataSet.authorsDataTable();
			this.Adapter.Fill(dataTable);
			return dataTable;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet.authorsDataTable dataTable)
		{
			return this.Adapter.Update(dataTable);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet dataSet)
		{
			return this.Adapter.Update(dataSet, "authors");
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow dataRow)
		{
			return this.Adapter.Update(new global::System.Data.DataRow[] {
						dataRow});
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow[] dataRows)
		{
			return this.Adapter.Update(dataRows);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
		public virtual int Delete(int Original_authorId, string Original_name, string Original_surname)
		{
			this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_authorId));
			if ((Original_name == null))
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_name));
			}
			if ((Original_surname == null))
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_surname));
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
			if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.DeleteCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.DeleteCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
		public virtual int Insert(string name, string surname)
		{
			if ((name == null))
			{
				this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name));
			}
			if ((surname == null))
			{
				this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[1].Value = ((string)(surname));
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
			if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.InsertCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.InsertCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string name, string surname, int Original_authorId, string Original_name, string Original_surname, int authorId)
		{
			if ((name == null))
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(name));
			}
			if ((surname == null))
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(surname));
			}
			this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_authorId));
			if ((Original_name == null))
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_name));
			}
			if ((Original_surname == null))
			{
				this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_surname));
			}
			this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(authorId));
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
			if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.UpdateCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.UpdateCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string name, string surname, int Original_authorId, string Original_name, string Original_surname)
		{
			return this.Update(name, surname, Original_authorId, Original_name, Original_surname, Original_authorId);
		}
	}

	/// <summary>
	///Represents the connection and commands used to retrieve and save data.
	///</summary>
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.ComponentModel.DataObjectAttribute(true)]
	[global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
	public partial class booksTableAdapter : global::System.ComponentModel.Component
	{

		private global::System.Data.SqlClient.SqlDataAdapter _adapter;

		private global::System.Data.SqlClient.SqlConnection _connection;

		private global::System.Data.SqlClient.SqlTransaction _transaction;

		private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

		private bool _clearBeforeFill;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public booksTableAdapter()
		{
			this.ClearBeforeFill = true;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
		{
			get
			{
				if ((this._adapter == null))
				{
					this.InitAdapter();
				}
				return this._adapter;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlConnection Connection
		{
			get
			{
				if ((this._connection == null))
				{
					this.InitConnection();
				}
				return this._connection;
			}
			set
			{
				this._connection = value;
				if ((this.Adapter.InsertCommand != null))
				{
					this.Adapter.InsertCommand.Connection = value;
				}
				if ((this.Adapter.DeleteCommand != null))
				{
					this.Adapter.DeleteCommand.Connection = value;
				}
				if ((this.Adapter.UpdateCommand != null))
				{
					this.Adapter.UpdateCommand.Connection = value;
				}
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					if ((this.CommandCollection[i] != null))
					{
						((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
					}
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlTransaction Transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				this._transaction = value;
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					this.CommandCollection[i].Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.DeleteCommand != null)))
				{
					this.Adapter.DeleteCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.InsertCommand != null)))
				{
					this.Adapter.InsertCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.UpdateCommand != null)))
				{
					this.Adapter.UpdateCommand.Transaction = this._transaction;
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
		{
			get
			{
				if ((this._commandCollection == null))
				{
					this.InitCommandCollection();
				}
				return this._commandCollection;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public bool ClearBeforeFill
		{
			get
			{
				return this._clearBeforeFill;
			}
			set
			{
				this._clearBeforeFill = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitAdapter()
		{
			this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
			global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
			tableMapping.SourceTable = "Table";
			tableMapping.DataSetTable = "books";
			tableMapping.ColumnMappings.Add("bookId", "bookId");
			tableMapping.ColumnMappings.Add("name", "name");
			tableMapping.ColumnMappings.Add("pagecount", "pagecount");
			tableMapping.ColumnMappings.Add("point", "point");
			tableMapping.ColumnMappings.Add("authorId", "authorId");
			tableMapping.ColumnMappings.Add("typeId", "typeId");
			this._adapter.TableMappings.Add(tableMapping);
			this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.DeleteCommand.Connection = this.Connection;
			this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[books] WHERE (([bookId] = @Original_bookId) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_pagecount = 1 AND [pagecount] IS NULL) OR ([pagecount] = @Original_pagecount)) AND ((@IsNull_point = 1 AND [point] IS NULL) OR ([point] = @Original_point)) AND ((@IsNull_authorId = 1 AND [authorId] IS NULL) OR ([authorId] = @Original_authorId)) AND ((@IsNull_typeId = 1 AND [typeId] IS NULL) OR ([typeId] = @Original_typeId)))";
			this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bookId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pagecount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pagecount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pagecount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pagecount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_authorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_authorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_typeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.InsertCommand.Connection = this.Connection;
			this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[books] ([name], [pagecount], [point], [authorId], [typeId]) VA" +
				"LUES (@name, @pagecount, @point, @authorId, @typeId);\r\nSELECT bookId, name, page" +
				"count, point, authorId, typeId FROM books WHERE (bookId = SCOPE_IDENTITY())";
			this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pagecount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pagecount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@authorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.UpdateCommand.Connection = this.Connection;
			this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[books] SET [name] = @name, [pagecount] = @pagecount, [point] = @point, [authorId] = @authorId, [typeId] = @typeId WHERE (([bookId] = @Original_bookId) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_pagecount = 1 AND [pagecount] IS NULL) OR ([pagecount] = @Original_pagecount)) AND ((@IsNull_point = 1 AND [point] IS NULL) OR ([point] = @Original_point)) AND ((@IsNull_authorId = 1 AND [authorId] IS NULL) OR ([authorId] = @Original_authorId)) AND ((@IsNull_typeId = 1 AND [typeId] IS NULL) OR ([typeId] = @Original_typeId)));
SELECT bookId, name, pagecount, point, authorId, typeId FROM books WHERE (bookId = @bookId)";
			this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pagecount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pagecount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@authorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bookId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pagecount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pagecount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pagecount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pagecount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_authorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_authorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "authorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_typeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bookId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitConnection()
		{
			this._connection = new global::System.Data.SqlClient.SqlConnection();
			this._connection.ConnectionString = global::LibraryManagementSystem.Properties.Settings.Default.libraryConnectionString;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitCommandCollection()
		{
			this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
			this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
			this._commandCollection[0].Connection = this.Connection;
			this._commandCollection[0].CommandText = "SELECT bookId, name, pagecount, point, authorId, typeId FROM dbo.books";
			this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
		public virtual int Fill(libraryDataSet.booksDataTable dataTable)
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			if ((this.ClearBeforeFill == true))
			{
				dataTable.Clear();
			}
			int returnValue = this.Adapter.Fill(dataTable);
			return returnValue;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
		public virtual libraryDataSet.booksDataTable GetData()
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			libraryDataSet.booksDataTable dataTable = new libraryDataSet.booksDataTable();
			this.Adapter.Fill(dataTable);
			return dataTable;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet.booksDataTable dataTable)
		{
			return this.Adapter.Update(dataTable);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet dataSet)
		{
			return this.Adapter.Update(dataSet, "books");
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow dataRow)
		{
			return this.Adapter.Update(new global::System.Data.DataRow[] {
						dataRow});
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow[] dataRows)
		{
			return this.Adapter.Update(dataRows);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
		public virtual int Delete(int Original_bookId, string Original_name, global::System.Nullable<int> Original_pagecount, global::System.Nullable<int> Original_point, global::System.Nullable<int> Original_authorId, global::System.Nullable<int> Original_typeId)
		{
			this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_bookId));
			if ((Original_name == null))
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_name));
			}
			if ((Original_pagecount.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_pagecount.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			if ((Original_point.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_point.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
			}
			if ((Original_authorId.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_authorId.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
			}
			if ((Original_typeId.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_typeId.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
			if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.DeleteCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.DeleteCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
		public virtual int Insert(string name, global::System.Nullable<int> pagecount, global::System.Nullable<int> point, global::System.Nullable<int> authorId, global::System.Nullable<int> typeId)
		{
			if ((name == null))
			{
				this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name));
			}
			if ((pagecount.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[1].Value = ((int)(pagecount.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
			}
			if ((point.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[2].Value = ((int)(point.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			if ((authorId.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[3].Value = ((int)(authorId.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
			}
			if ((typeId.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[4].Value = ((int)(typeId.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
			if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.InsertCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.InsertCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string name, global::System.Nullable<int> pagecount, global::System.Nullable<int> point, global::System.Nullable<int> authorId, global::System.Nullable<int> typeId, int Original_bookId, string Original_name, global::System.Nullable<int> Original_pagecount, global::System.Nullable<int> Original_point, global::System.Nullable<int> Original_authorId, global::System.Nullable<int> Original_typeId, int bookId)
		{
			if ((name == null))
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(name));
			}
			if ((pagecount.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(pagecount.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
			}
			if ((point.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(point.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			if ((authorId.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(authorId.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
			}
			if ((typeId.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(typeId.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_bookId));
			if ((Original_name == null))
			{
				this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_name));
			}
			if ((Original_pagecount.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_pagecount.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
			}
			if ((Original_point.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_point.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
			}
			if ((Original_authorId.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_authorId.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
			}
			if ((Original_typeId.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_typeId.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
			}
			this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(bookId));
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
			if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.UpdateCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.UpdateCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string name, global::System.Nullable<int> pagecount, global::System.Nullable<int> point, global::System.Nullable<int> authorId, global::System.Nullable<int> typeId, int Original_bookId, string Original_name, global::System.Nullable<int> Original_pagecount, global::System.Nullable<int> Original_point, global::System.Nullable<int> Original_authorId, global::System.Nullable<int> Original_typeId)
		{
			return this.Update(name, pagecount, point, authorId, typeId, Original_bookId, Original_name, Original_pagecount, Original_point, Original_authorId, Original_typeId, Original_bookId);
		}
	}

	/// <summary>
	///Represents the connection and commands used to retrieve and save data.
	///</summary>
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.ComponentModel.DataObjectAttribute(true)]
	[global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
	public partial class borrowsTableAdapter : global::System.ComponentModel.Component
	{

		private global::System.Data.SqlClient.SqlDataAdapter _adapter;

		private global::System.Data.SqlClient.SqlConnection _connection;

		private global::System.Data.SqlClient.SqlTransaction _transaction;

		private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

		private bool _clearBeforeFill;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public borrowsTableAdapter()
		{
			this.ClearBeforeFill = true;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
		{
			get
			{
				if ((this._adapter == null))
				{
					this.InitAdapter();
				}
				return this._adapter;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlConnection Connection
		{
			get
			{
				if ((this._connection == null))
				{
					this.InitConnection();
				}
				return this._connection;
			}
			set
			{
				this._connection = value;
				if ((this.Adapter.InsertCommand != null))
				{
					this.Adapter.InsertCommand.Connection = value;
				}
				if ((this.Adapter.DeleteCommand != null))
				{
					this.Adapter.DeleteCommand.Connection = value;
				}
				if ((this.Adapter.UpdateCommand != null))
				{
					this.Adapter.UpdateCommand.Connection = value;
				}
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					if ((this.CommandCollection[i] != null))
					{
						((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
					}
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlTransaction Transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				this._transaction = value;
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					this.CommandCollection[i].Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.DeleteCommand != null)))
				{
					this.Adapter.DeleteCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.InsertCommand != null)))
				{
					this.Adapter.InsertCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.UpdateCommand != null)))
				{
					this.Adapter.UpdateCommand.Transaction = this._transaction;
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
		{
			get
			{
				if ((this._commandCollection == null))
				{
					this.InitCommandCollection();
				}
				return this._commandCollection;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public bool ClearBeforeFill
		{
			get
			{
				return this._clearBeforeFill;
			}
			set
			{
				this._clearBeforeFill = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitAdapter()
		{
			this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
			global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
			tableMapping.SourceTable = "Table";
			tableMapping.DataSetTable = "borrows";
			tableMapping.ColumnMappings.Add("borrowId", "borrowId");
			tableMapping.ColumnMappings.Add("studentId", "studentId");
			tableMapping.ColumnMappings.Add("bookId", "bookId");
			tableMapping.ColumnMappings.Add("takenDate", "takenDate");
			tableMapping.ColumnMappings.Add("broughtDate", "broughtDate");
			this._adapter.TableMappings.Add(tableMapping);
			this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.DeleteCommand.Connection = this.Connection;
			this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[borrows] WHERE (([borrowId] = @Original_borrowId) AND ((@IsNull_studentId = 1 AND [studentId] IS NULL) OR ([studentId] = @Original_studentId)) AND ((@IsNull_bookId = 1 AND [bookId] IS NULL) OR ([bookId] = @Original_bookId)) AND ((@IsNull_takenDate = 1 AND [takenDate] IS NULL) OR ([takenDate] = @Original_takenDate)) AND ((@IsNull_broughtDate = 1 AND [broughtDate] IS NULL) OR ([broughtDate] = @Original_broughtDate)))";
			this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_borrowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "borrowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_studentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_studentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bookId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bookId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_takenDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "takenDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_takenDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "takenDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_broughtDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "broughtDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_broughtDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "broughtDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.InsertCommand.Connection = this.Connection;
			this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[borrows] ([studentId], [bookId], [takenDate], [broughtDate]) V" +
				"ALUES (@studentId, @bookId, @takenDate, @broughtDate);\r\nSELECT borrowId, student" +
				"Id, bookId, takenDate, broughtDate FROM borrows WHERE (borrowId = SCOPE_IDENTITY" +
				"())";
			this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@studentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bookId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@takenDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "takenDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@broughtDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "broughtDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.UpdateCommand.Connection = this.Connection;
			this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[borrows] SET [studentId] = @studentId, [bookId] = @bookId, [takenDate] = @takenDate, [broughtDate] = @broughtDate WHERE (([borrowId] = @Original_borrowId) AND ((@IsNull_studentId = 1 AND [studentId] IS NULL) OR ([studentId] = @Original_studentId)) AND ((@IsNull_bookId = 1 AND [bookId] IS NULL) OR ([bookId] = @Original_bookId)) AND ((@IsNull_takenDate = 1 AND [takenDate] IS NULL) OR ([takenDate] = @Original_takenDate)) AND ((@IsNull_broughtDate = 1 AND [broughtDate] IS NULL) OR ([broughtDate] = @Original_broughtDate)));
SELECT borrowId, studentId, bookId, takenDate, broughtDate FROM borrows WHERE (borrowId = @borrowId)";
			this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@studentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bookId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@takenDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "takenDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@broughtDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "broughtDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_borrowId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "borrowId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_studentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_studentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bookId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bookId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bookId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_takenDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "takenDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_takenDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "takenDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_broughtDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "broughtDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_broughtDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "broughtDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@borrowId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "borrowId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitConnection()
		{
			this._connection = new global::System.Data.SqlClient.SqlConnection();
			this._connection.ConnectionString = global::LibraryManagementSystem.Properties.Settings.Default.libraryConnectionString;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitCommandCollection()
		{
			this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
			this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
			this._commandCollection[0].Connection = this.Connection;
			this._commandCollection[0].CommandText = "SELECT borrowId, studentId, bookId, takenDate, broughtDate FROM dbo.borrows";
			this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
		public virtual int Fill(libraryDataSet.borrowsDataTable dataTable)
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			if ((this.ClearBeforeFill == true))
			{
				dataTable.Clear();
			}
			int returnValue = this.Adapter.Fill(dataTable);
			return returnValue;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
		public virtual libraryDataSet.borrowsDataTable GetData()
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			libraryDataSet.borrowsDataTable dataTable = new libraryDataSet.borrowsDataTable();
			this.Adapter.Fill(dataTable);
			return dataTable;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet.borrowsDataTable dataTable)
		{
			return this.Adapter.Update(dataTable);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet dataSet)
		{
			return this.Adapter.Update(dataSet, "borrows");
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow dataRow)
		{
			return this.Adapter.Update(new global::System.Data.DataRow[] {
						dataRow});
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow[] dataRows)
		{
			return this.Adapter.Update(dataRows);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
		public virtual int Delete(int Original_borrowId, global::System.Nullable<int> Original_studentId, global::System.Nullable<int> Original_bookId, global::System.Nullable<global::System.DateTime> Original_takenDate, global::System.Nullable<global::System.DateTime> Original_broughtDate)
		{
			this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_borrowId));
			if ((Original_studentId.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_studentId.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			if ((Original_bookId.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_bookId.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			if ((Original_takenDate.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_takenDate.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
			}
			if ((Original_broughtDate.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_broughtDate.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
			if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.DeleteCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.DeleteCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
		public virtual int Insert(global::System.Nullable<int> studentId, global::System.Nullable<int> bookId, global::System.Nullable<global::System.DateTime> takenDate, global::System.Nullable<global::System.DateTime> broughtDate)
		{
			if ((studentId.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[0].Value = ((int)(studentId.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			if ((bookId.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[1].Value = ((int)(bookId.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
			}
			if ((takenDate.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(takenDate.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			if ((broughtDate.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(broughtDate.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
			if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.InsertCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.InsertCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(global::System.Nullable<int> studentId, global::System.Nullable<int> bookId, global::System.Nullable<global::System.DateTime> takenDate, global::System.Nullable<global::System.DateTime> broughtDate, int Original_borrowId, global::System.Nullable<int> Original_studentId, global::System.Nullable<int> Original_bookId, global::System.Nullable<global::System.DateTime> Original_takenDate, global::System.Nullable<global::System.DateTime> Original_broughtDate, int borrowId)
		{
			if ((studentId.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(studentId.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			if ((bookId.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(bookId.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
			}
			if ((takenDate.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(takenDate.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			if ((broughtDate.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(broughtDate.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
			}
			this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_borrowId));
			if ((Original_studentId.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_studentId.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
			}
			if ((Original_bookId.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_bookId.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
			}
			if ((Original_takenDate.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_takenDate.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
			}
			if ((Original_broughtDate.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_broughtDate.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
			}
			this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(borrowId));
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
			if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.UpdateCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.UpdateCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(global::System.Nullable<int> studentId, global::System.Nullable<int> bookId, global::System.Nullable<global::System.DateTime> takenDate, global::System.Nullable<global::System.DateTime> broughtDate, int Original_borrowId, global::System.Nullable<int> Original_studentId, global::System.Nullable<int> Original_bookId, global::System.Nullable<global::System.DateTime> Original_takenDate, global::System.Nullable<global::System.DateTime> Original_broughtDate)
		{
			return this.Update(studentId, bookId, takenDate, broughtDate, Original_borrowId, Original_studentId, Original_bookId, Original_takenDate, Original_broughtDate, Original_borrowId);
		}
	}

	/// <summary>
	///Represents the connection and commands used to retrieve and save data.
	///</summary>
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.ComponentModel.DataObjectAttribute(true)]
	[global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
	public partial class studentsTableAdapter : global::System.ComponentModel.Component
	{

		private global::System.Data.SqlClient.SqlDataAdapter _adapter;

		private global::System.Data.SqlClient.SqlConnection _connection;

		private global::System.Data.SqlClient.SqlTransaction _transaction;

		private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

		private bool _clearBeforeFill;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public studentsTableAdapter()
		{
			this.ClearBeforeFill = true;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
		{
			get
			{
				if ((this._adapter == null))
				{
					this.InitAdapter();
				}
				return this._adapter;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlConnection Connection
		{
			get
			{
				if ((this._connection == null))
				{
					this.InitConnection();
				}
				return this._connection;
			}
			set
			{
				this._connection = value;
				if ((this.Adapter.InsertCommand != null))
				{
					this.Adapter.InsertCommand.Connection = value;
				}
				if ((this.Adapter.DeleteCommand != null))
				{
					this.Adapter.DeleteCommand.Connection = value;
				}
				if ((this.Adapter.UpdateCommand != null))
				{
					this.Adapter.UpdateCommand.Connection = value;
				}
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					if ((this.CommandCollection[i] != null))
					{
						((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
					}
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlTransaction Transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				this._transaction = value;
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					this.CommandCollection[i].Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.DeleteCommand != null)))
				{
					this.Adapter.DeleteCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.InsertCommand != null)))
				{
					this.Adapter.InsertCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.UpdateCommand != null)))
				{
					this.Adapter.UpdateCommand.Transaction = this._transaction;
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
		{
			get
			{
				if ((this._commandCollection == null))
				{
					this.InitCommandCollection();
				}
				return this._commandCollection;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public bool ClearBeforeFill
		{
			get
			{
				return this._clearBeforeFill;
			}
			set
			{
				this._clearBeforeFill = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitAdapter()
		{
			this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
			global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
			tableMapping.SourceTable = "Table";
			tableMapping.DataSetTable = "students";
			tableMapping.ColumnMappings.Add("studentId", "studentId");
			tableMapping.ColumnMappings.Add("name", "name");
			tableMapping.ColumnMappings.Add("surname", "surname");
			tableMapping.ColumnMappings.Add("birthdate", "birthdate");
			tableMapping.ColumnMappings.Add("gender", "gender");
			tableMapping.ColumnMappings.Add("class", "class");
			tableMapping.ColumnMappings.Add("point", "point");
			this._adapter.TableMappings.Add(tableMapping);
			this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.DeleteCommand.Connection = this.Connection;
			this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[students] WHERE (([studentId] = @Original_studentId) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_surname = 1 AND [surname] IS NULL) OR ([surname] = @Original_surname)) AND ((@IsNull_birthdate = 1 AND [birthdate] IS NULL) OR ([birthdate] = @Original_birthdate)) AND ((@IsNull_gender = 1 AND [gender] IS NULL) OR ([gender] = @Original_gender)) AND ((@IsNull_class = 1 AND [class] IS NULL) OR ([class] = @Original_class)) AND ((@IsNull_point = 1 AND [point] IS NULL) OR ([point] = @Original_point)))";
			this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_studentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_surname", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_birthdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthdate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.InsertCommand.Connection = this.Connection;
			this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[students] ([name], [surname], [birthdate], [gender], [class], [point]) VALUES (@name, @surname, @birthdate, @gender, @class, @point);
SELECT studentId, name, surname, birthdate, gender, class, point FROM students WHERE (studentId = SCOPE_IDENTITY())";
			this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthdate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.UpdateCommand.Connection = this.Connection;
			this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[students] SET [name] = @name, [surname] = @surname, [birthdate] = @birthdate, [gender] = @gender, [class] = @class, [point] = @point WHERE (([studentId] = @Original_studentId) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_surname = 1 AND [surname] IS NULL) OR ([surname] = @Original_surname)) AND ((@IsNull_birthdate = 1 AND [birthdate] IS NULL) OR ([birthdate] = @Original_birthdate)) AND ((@IsNull_gender = 1 AND [gender] IS NULL) OR ([gender] = @Original_gender)) AND ((@IsNull_class = 1 AND [class] IS NULL) OR ([class] = @Original_class)) AND ((@IsNull_point = 1 AND [point] IS NULL) OR ([point] = @Original_point)));
SELECT studentId, name, surname, birthdate, gender, class, point FROM students WHERE (studentId = @studentId)";
			this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthdate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_studentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_surname", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_birthdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthdate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_point", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "point", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@studentId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "studentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitConnection()
		{
			this._connection = new global::System.Data.SqlClient.SqlConnection();
			this._connection.ConnectionString = global::LibraryManagementSystem.Properties.Settings.Default.libraryConnectionString;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitCommandCollection()
		{
			this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
			this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
			this._commandCollection[0].Connection = this.Connection;
			this._commandCollection[0].CommandText = "SELECT studentId, name, surname, birthdate, gender, class, point FROM dbo.student" +
				"s";
			this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
		public virtual int Fill(libraryDataSet.studentsDataTable dataTable)
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			if ((this.ClearBeforeFill == true))
			{
				dataTable.Clear();
			}
			int returnValue = this.Adapter.Fill(dataTable);
			return returnValue;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
		public virtual libraryDataSet.studentsDataTable GetData()
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			libraryDataSet.studentsDataTable dataTable = new libraryDataSet.studentsDataTable();
			this.Adapter.Fill(dataTable);
			return dataTable;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet.studentsDataTable dataTable)
		{
			return this.Adapter.Update(dataTable);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet dataSet)
		{
			return this.Adapter.Update(dataSet, "students");
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow dataRow)
		{
			return this.Adapter.Update(new global::System.Data.DataRow[] {
						dataRow});
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow[] dataRows)
		{
			return this.Adapter.Update(dataRows);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
		public virtual int Delete(int Original_studentId, string Original_name, string Original_surname, global::System.Nullable<global::System.DateTime> Original_birthdate, string Original_gender, string Original_class, global::System.Nullable<int> Original_point)
		{
			this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_studentId));
			if ((Original_name == null))
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_name));
			}
			if ((Original_surname == null))
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_surname));
			}
			if ((Original_birthdate.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_birthdate.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
			}
			if ((Original_gender == null))
			{
				this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_gender));
			}
			if ((Original_class == null))
			{
				this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_class));
			}
			if ((Original_point.HasValue == true))
			{
				this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_point.Value));
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
			if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.DeleteCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.DeleteCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
		public virtual int Insert(string name, string surname, global::System.Nullable<global::System.DateTime> birthdate, string gender, string _class, global::System.Nullable<int> point)
		{
			if ((name == null))
			{
				this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name));
			}
			if ((surname == null))
			{
				this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[1].Value = ((string)(surname));
			}
			if ((birthdate.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(birthdate.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			if ((gender == null))
			{
				this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[3].Value = ((string)(gender));
			}
			if ((_class == null))
			{
				this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[4].Value = ((string)(_class));
			}
			if ((point.HasValue == true))
			{
				this.Adapter.InsertCommand.Parameters[5].Value = ((int)(point.Value));
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
			if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.InsertCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.InsertCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string name, string surname, global::System.Nullable<global::System.DateTime> birthdate, string gender, string _class, global::System.Nullable<int> point, int Original_studentId, string Original_name, string Original_surname, global::System.Nullable<global::System.DateTime> Original_birthdate, string Original_gender, string Original_class, global::System.Nullable<int> Original_point, int studentId)
		{
			if ((name == null))
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(name));
			}
			if ((surname == null))
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(surname));
			}
			if ((birthdate.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(birthdate.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			if ((gender == null))
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(gender));
			}
			if ((_class == null))
			{
				this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(_class));
			}
			if ((point.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(point.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
			}
			this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_studentId));
			if ((Original_name == null))
			{
				this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_name));
			}
			if ((Original_surname == null))
			{
				this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_surname));
			}
			if ((Original_birthdate.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_birthdate.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
			}
			if ((Original_gender == null))
			{
				this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_gender));
			}
			if ((Original_class == null))
			{
				this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_class));
			}
			if ((Original_point.HasValue == true))
			{
				this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_point.Value));
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
			}
			this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(studentId));
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
			if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.UpdateCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.UpdateCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string name, string surname, global::System.Nullable<global::System.DateTime> birthdate, string gender, string _class, global::System.Nullable<int> point, int Original_studentId, string Original_name, string Original_surname, global::System.Nullable<global::System.DateTime> Original_birthdate, string Original_gender, string Original_class, global::System.Nullable<int> Original_point)
		{
			return this.Update(name, surname, birthdate, gender, _class, point, Original_studentId, Original_name, Original_surname, Original_birthdate, Original_gender, Original_class, Original_point, Original_studentId);
		}
	}

	/// <summary>
	///Represents the connection and commands used to retrieve and save data.
	///</summary>
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.ComponentModel.DataObjectAttribute(true)]
	[global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
	public partial class typesTableAdapter : global::System.ComponentModel.Component
	{

		private global::System.Data.SqlClient.SqlDataAdapter _adapter;

		private global::System.Data.SqlClient.SqlConnection _connection;

		private global::System.Data.SqlClient.SqlTransaction _transaction;

		private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

		private bool _clearBeforeFill;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public typesTableAdapter()
		{
			this.ClearBeforeFill = true;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
		{
			get
			{
				if ((this._adapter == null))
				{
					this.InitAdapter();
				}
				return this._adapter;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlConnection Connection
		{
			get
			{
				if ((this._connection == null))
				{
					this.InitConnection();
				}
				return this._connection;
			}
			set
			{
				this._connection = value;
				if ((this.Adapter.InsertCommand != null))
				{
					this.Adapter.InsertCommand.Connection = value;
				}
				if ((this.Adapter.DeleteCommand != null))
				{
					this.Adapter.DeleteCommand.Connection = value;
				}
				if ((this.Adapter.UpdateCommand != null))
				{
					this.Adapter.UpdateCommand.Connection = value;
				}
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					if ((this.CommandCollection[i] != null))
					{
						((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
					}
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlTransaction Transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				this._transaction = value;
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					this.CommandCollection[i].Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.DeleteCommand != null)))
				{
					this.Adapter.DeleteCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.InsertCommand != null)))
				{
					this.Adapter.InsertCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.UpdateCommand != null)))
				{
					this.Adapter.UpdateCommand.Transaction = this._transaction;
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
		{
			get
			{
				if ((this._commandCollection == null))
				{
					this.InitCommandCollection();
				}
				return this._commandCollection;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public bool ClearBeforeFill
		{
			get
			{
				return this._clearBeforeFill;
			}
			set
			{
				this._clearBeforeFill = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitAdapter()
		{
			this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
			global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
			tableMapping.SourceTable = "Table";
			tableMapping.DataSetTable = "types";
			tableMapping.ColumnMappings.Add("typeId", "typeId");
			tableMapping.ColumnMappings.Add("name", "name");
			this._adapter.TableMappings.Add(tableMapping);
			this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.DeleteCommand.Connection = this.Connection;
			this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[types] WHERE (([typeId] = @Original_typeId) AND ((@IsNull_name" +
				" = 1 AND [name] IS NULL) OR ([name] = @Original_name)))";
			this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.InsertCommand.Connection = this.Connection;
			this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[types] ([name]) VALUES (@name);\r\nSELECT typeId, name FROM type" +
				"s WHERE (typeId = SCOPE_IDENTITY())";
			this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.UpdateCommand.Connection = this.Connection;
			this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[types] SET [name] = @name WHERE (([typeId] = @Original_typeId) AND " +
				"((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)));\r\nSELECT t" +
				"ypeId, name FROM types WHERE (typeId = @typeId)";
			this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "typeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitConnection()
		{
			this._connection = new global::System.Data.SqlClient.SqlConnection();
			this._connection.ConnectionString = global::LibraryManagementSystem.Properties.Settings.Default.libraryConnectionString;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitCommandCollection()
		{
			this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
			this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
			this._commandCollection[0].Connection = this.Connection;
			this._commandCollection[0].CommandText = "SELECT typeId, name FROM dbo.types";
			this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
		public virtual int Fill(libraryDataSet.typesDataTable dataTable)
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			if ((this.ClearBeforeFill == true))
			{
				dataTable.Clear();
			}
			int returnValue = this.Adapter.Fill(dataTable);
			return returnValue;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
		public virtual libraryDataSet.typesDataTable GetData()
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			libraryDataSet.typesDataTable dataTable = new libraryDataSet.typesDataTable();
			this.Adapter.Fill(dataTable);
			return dataTable;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet.typesDataTable dataTable)
		{
			return this.Adapter.Update(dataTable);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDataSet dataSet)
		{
			return this.Adapter.Update(dataSet, "types");
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow dataRow)
		{
			return this.Adapter.Update(new global::System.Data.DataRow[] {
						dataRow});
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow[] dataRows)
		{
			return this.Adapter.Update(dataRows);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
		public virtual int Delete(int Original_typeId, string Original_name)
		{
			this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_typeId));
			if ((Original_name == null))
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
				this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
				this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_name));
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
			if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.DeleteCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.DeleteCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
		public virtual int Insert(string name)
		{
			if ((name == null))
			{
				this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name));
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
			if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.InsertCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.InsertCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string name, int Original_typeId, string Original_name, int typeId)
		{
			if ((name == null))
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(name));
			}
			this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_typeId));
			if ((Original_name == null))
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
				this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
				this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_name));
			}
			this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(typeId));
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
			if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.UpdateCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.UpdateCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string name, int Original_typeId, string Original_name)
		{
			return this.Update(name, Original_typeId, Original_name, Original_typeId);
		}
	}

	/// <summary>
	///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
	///</summary>
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
		"esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
	public partial class TableAdapterManager : global::System.ComponentModel.Component
	{

		private UpdateOrderOption _updateOrder;

		private authorsTableAdapter _authorsTableAdapter;

		private booksTableAdapter _booksTableAdapter;

		private borrowsTableAdapter _borrowsTableAdapter;

		private studentsTableAdapter _studentsTableAdapter;

		private typesTableAdapter _typesTableAdapter;

		private bool _backupDataSetBeforeUpdate;

		private global::System.Data.IDbConnection _connection;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public UpdateOrderOption UpdateOrder
		{
			get
			{
				return this._updateOrder;
			}
			set
			{
				this._updateOrder = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
			"a", "System.Drawing.Design.UITypeEditor")]
		public authorsTableAdapter authorsTableAdapter
		{
			get
			{
				return this._authorsTableAdapter;
			}
			set
			{
				this._authorsTableAdapter = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
			"a", "System.Drawing.Design.UITypeEditor")]
		public booksTableAdapter booksTableAdapter
		{
			get
			{
				return this._booksTableAdapter;
			}
			set
			{
				this._booksTableAdapter = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
			"a", "System.Drawing.Design.UITypeEditor")]
		public borrowsTableAdapter borrowsTableAdapter
		{
			get
			{
				return this._borrowsTableAdapter;
			}
			set
			{
				this._borrowsTableAdapter = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
			"a", "System.Drawing.Design.UITypeEditor")]
		public studentsTableAdapter studentsTableAdapter
		{
			get
			{
				return this._studentsTableAdapter;
			}
			set
			{
				this._studentsTableAdapter = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
			"a", "System.Drawing.Design.UITypeEditor")]
		public typesTableAdapter typesTableAdapter
		{
			get
			{
				return this._typesTableAdapter;
			}
			set
			{
				this._typesTableAdapter = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public bool BackupDataSetBeforeUpdate
		{
			get
			{
				return this._backupDataSetBeforeUpdate;
			}
			set
			{
				this._backupDataSetBeforeUpdate = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		public global::System.Data.IDbConnection Connection
		{
			get
			{
				if ((this._connection != null))
				{
					return this._connection;
				}
				if (((this._authorsTableAdapter != null)
							&& (this._authorsTableAdapter.Connection != null)))
				{
					return this._authorsTableAdapter.Connection;
				}
				if (((this._booksTableAdapter != null)
							&& (this._booksTableAdapter.Connection != null)))
				{
					return this._booksTableAdapter.Connection;
				}
				if (((this._borrowsTableAdapter != null)
							&& (this._borrowsTableAdapter.Connection != null)))
				{
					return this._borrowsTableAdapter.Connection;
				}
				if (((this._studentsTableAdapter != null)
							&& (this._studentsTableAdapter.Connection != null)))
				{
					return this._studentsTableAdapter.Connection;
				}
				if (((this._typesTableAdapter != null)
							&& (this._typesTableAdapter.Connection != null)))
				{
					return this._typesTableAdapter.Connection;
				}
				return null;
			}
			set
			{
				this._connection = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		public int TableAdapterInstanceCount
		{
			get
			{
				int count = 0;
				if ((this._authorsTableAdapter != null))
				{
					count = (count + 1);
				}
				if ((this._booksTableAdapter != null))
				{
					count = (count + 1);
				}
				if ((this._borrowsTableAdapter != null))
				{
					count = (count + 1);
				}
				if ((this._studentsTableAdapter != null))
				{
					count = (count + 1);
				}
				if ((this._typesTableAdapter != null))
				{
					count = (count + 1);
				}
				return count;
			}
		}

		/// <summary>
		///Update rows in top-down order.
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private int UpdateUpdatedRows(libraryDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
		{
			int result = 0;
			if ((this._authorsTableAdapter != null))
			{
				global::System.Data.DataRow[] updatedRows = dataSet.authors.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
				updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
				if (((updatedRows != null)
							&& (0 < updatedRows.Length)))
				{
					result = (result + this._authorsTableAdapter.Update(updatedRows));
					allChangedRows.AddRange(updatedRows);
				}
			}
			if ((this._typesTableAdapter != null))
			{
				global::System.Data.DataRow[] updatedRows = dataSet.types.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
				updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
				if (((updatedRows != null)
							&& (0 < updatedRows.Length)))
				{
					result = (result + this._typesTableAdapter.Update(updatedRows));
					allChangedRows.AddRange(updatedRows);
				}
			}
			if ((this._booksTableAdapter != null))
			{
				global::System.Data.DataRow[] updatedRows = dataSet.books.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
				updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
				if (((updatedRows != null)
							&& (0 < updatedRows.Length)))
				{
					result = (result + this._booksTableAdapter.Update(updatedRows));
					allChangedRows.AddRange(updatedRows);
				}
			}
			if ((this._studentsTableAdapter != null))
			{
				global::System.Data.DataRow[] updatedRows = dataSet.students.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
				updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
				if (((updatedRows != null)
							&& (0 < updatedRows.Length)))
				{
					result = (result + this._studentsTableAdapter.Update(updatedRows));
					allChangedRows.AddRange(updatedRows);
				}
			}
			if ((this._borrowsTableAdapter != null))
			{
				global::System.Data.DataRow[] updatedRows = dataSet.borrows.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
				updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
				if (((updatedRows != null)
							&& (0 < updatedRows.Length)))
				{
					result = (result + this._borrowsTableAdapter.Update(updatedRows));
					allChangedRows.AddRange(updatedRows);
				}
			}
			return result;
		}

		/// <summary>
		///Insert rows in top-down order.
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private int UpdateInsertedRows(libraryDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
		{
			int result = 0;
			if ((this._authorsTableAdapter != null))
			{
				global::System.Data.DataRow[] addedRows = dataSet.authors.Select(null, null, global::System.Data.DataViewRowState.Added);
				if (((addedRows != null)
							&& (0 < addedRows.Length)))
				{
					result = (result + this._authorsTableAdapter.Update(addedRows));
					allAddedRows.AddRange(addedRows);
				}
			}
			if ((this._typesTableAdapter != null))
			{
				global::System.Data.DataRow[] addedRows = dataSet.types.Select(null, null, global::System.Data.DataViewRowState.Added);
				if (((addedRows != null)
							&& (0 < addedRows.Length)))
				{
					result = (result + this._typesTableAdapter.Update(addedRows));
					allAddedRows.AddRange(addedRows);
				}
			}
			if ((this._booksTableAdapter != null))
			{
				global::System.Data.DataRow[] addedRows = dataSet.books.Select(null, null, global::System.Data.DataViewRowState.Added);
				if (((addedRows != null)
							&& (0 < addedRows.Length)))
				{
					result = (result + this._booksTableAdapter.Update(addedRows));
					allAddedRows.AddRange(addedRows);
				}
			}
			if ((this._studentsTableAdapter != null))
			{
				global::System.Data.DataRow[] addedRows = dataSet.students.Select(null, null, global::System.Data.DataViewRowState.Added);
				if (((addedRows != null)
							&& (0 < addedRows.Length)))
				{
					result = (result + this._studentsTableAdapter.Update(addedRows));
					allAddedRows.AddRange(addedRows);
				}
			}
			if ((this._borrowsTableAdapter != null))
			{
				global::System.Data.DataRow[] addedRows = dataSet.borrows.Select(null, null, global::System.Data.DataViewRowState.Added);
				if (((addedRows != null)
							&& (0 < addedRows.Length)))
				{
					result = (result + this._borrowsTableAdapter.Update(addedRows));
					allAddedRows.AddRange(addedRows);
				}
			}
			return result;
		}

		/// <summary>
		///Delete rows in bottom-up order.
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private int UpdateDeletedRows(libraryDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows)
		{
			int result = 0;
			if ((this._borrowsTableAdapter != null))
			{
				global::System.Data.DataRow[] deletedRows = dataSet.borrows.Select(null, null, global::System.Data.DataViewRowState.Deleted);
				if (((deletedRows != null)
							&& (0 < deletedRows.Length)))
				{
					result = (result + this._borrowsTableAdapter.Update(deletedRows));
					allChangedRows.AddRange(deletedRows);
				}
			}
			if ((this._studentsTableAdapter != null))
			{
				global::System.Data.DataRow[] deletedRows = dataSet.students.Select(null, null, global::System.Data.DataViewRowState.Deleted);
				if (((deletedRows != null)
							&& (0 < deletedRows.Length)))
				{
					result = (result + this._studentsTableAdapter.Update(deletedRows));
					allChangedRows.AddRange(deletedRows);
				}
			}
			if ((this._booksTableAdapter != null))
			{
				global::System.Data.DataRow[] deletedRows = dataSet.books.Select(null, null, global::System.Data.DataViewRowState.Deleted);
				if (((deletedRows != null)
							&& (0 < deletedRows.Length)))
				{
					result = (result + this._booksTableAdapter.Update(deletedRows));
					allChangedRows.AddRange(deletedRows);
				}
			}
			if ((this._typesTableAdapter != null))
			{
				global::System.Data.DataRow[] deletedRows = dataSet.types.Select(null, null, global::System.Data.DataViewRowState.Deleted);
				if (((deletedRows != null)
							&& (0 < deletedRows.Length)))
				{
					result = (result + this._typesTableAdapter.Update(deletedRows));
					allChangedRows.AddRange(deletedRows);
				}
			}
			if ((this._authorsTableAdapter != null))
			{
				global::System.Data.DataRow[] deletedRows = dataSet.authors.Select(null, null, global::System.Data.DataViewRowState.Deleted);
				if (((deletedRows != null)
							&& (0 < deletedRows.Length)))
				{
					result = (result + this._authorsTableAdapter.Update(deletedRows));
					allChangedRows.AddRange(deletedRows);
				}
			}
			return result;
		}

		/// <summary>
		///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
		{
			if (((updatedRows == null)
						|| (updatedRows.Length < 1)))
			{
				return updatedRows;
			}
			if (((allAddedRows == null)
						|| (allAddedRows.Count < 1)))
			{
				return updatedRows;
			}
			global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
			for (int i = 0; (i < updatedRows.Length); i = (i + 1))
			{
				global::System.Data.DataRow row = updatedRows[i];
				if ((allAddedRows.Contains(row) == false))
				{
					realUpdatedRows.Add(row);
				}
			}
			return realUpdatedRows.ToArray();
		}

		/// <summary>
		///Update all changes to the dataset.
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public virtual int UpdateAll(libraryDataSet dataSet)
		{
			if ((dataSet == null))
			{
				throw new global::System.ArgumentNullException("dataSet");
			}
			if ((dataSet.HasChanges() == false))
			{
				return 0;
			}
			if (((this._authorsTableAdapter != null)
						&& (this.MatchTableAdapterConnection(this._authorsTableAdapter.Connection) == false)))
			{
				throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
						"tring.");
			}
			if (((this._booksTableAdapter != null)
						&& (this.MatchTableAdapterConnection(this._booksTableAdapter.Connection) == false)))
			{
				throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
						"tring.");
			}
			if (((this._borrowsTableAdapter != null)
						&& (this.MatchTableAdapterConnection(this._borrowsTableAdapter.Connection) == false)))
			{
				throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
						"tring.");
			}
			if (((this._studentsTableAdapter != null)
						&& (this.MatchTableAdapterConnection(this._studentsTableAdapter.Connection) == false)))
			{
				throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
						"tring.");
			}
			if (((this._typesTableAdapter != null)
						&& (this.MatchTableAdapterConnection(this._typesTableAdapter.Connection) == false)))
			{
				throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
						"tring.");
			}
			global::System.Data.IDbConnection workConnection = this.Connection;
			if ((workConnection == null))
			{
				throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
						"ger TableAdapter property to a valid TableAdapter instance.");
			}
			bool workConnOpened = false;
			if (((workConnection.State & global::System.Data.ConnectionState.Broken)
						== global::System.Data.ConnectionState.Broken))
			{
				workConnection.Close();
			}
			if ((workConnection.State == global::System.Data.ConnectionState.Closed))
			{
				workConnection.Open();
				workConnOpened = true;
			}
			global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
			if ((workTransaction == null))
			{
				throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
						"ctions or the current state is not allowing the transaction to begin.");
			}
			global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
			global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
			global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
			global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
			int result = 0;
			global::System.Data.DataSet backupDataSet = null;
			if (this.BackupDataSetBeforeUpdate)
			{
				backupDataSet = new global::System.Data.DataSet();
				backupDataSet.Merge(dataSet);
			}
			try
			{
				// ---- Prepare for update -----------
				//
				if ((this._authorsTableAdapter != null))
				{
					revertConnections.Add(this._authorsTableAdapter, this._authorsTableAdapter.Connection);
					this._authorsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
					this._authorsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
					if (this._authorsTableAdapter.Adapter.AcceptChangesDuringUpdate)
					{
						this._authorsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
						adaptersWithAcceptChangesDuringUpdate.Add(this._authorsTableAdapter.Adapter);
					}
				}
				if ((this._booksTableAdapter != null))
				{
					revertConnections.Add(this._booksTableAdapter, this._booksTableAdapter.Connection);
					this._booksTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
					this._booksTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
					if (this._booksTableAdapter.Adapter.AcceptChangesDuringUpdate)
					{
						this._booksTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
						adaptersWithAcceptChangesDuringUpdate.Add(this._booksTableAdapter.Adapter);
					}
				}
				if ((this._borrowsTableAdapter != null))
				{
					revertConnections.Add(this._borrowsTableAdapter, this._borrowsTableAdapter.Connection);
					this._borrowsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
					this._borrowsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
					if (this._borrowsTableAdapter.Adapter.AcceptChangesDuringUpdate)
					{
						this._borrowsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
						adaptersWithAcceptChangesDuringUpdate.Add(this._borrowsTableAdapter.Adapter);
					}
				}
				if ((this._studentsTableAdapter != null))
				{
					revertConnections.Add(this._studentsTableAdapter, this._studentsTableAdapter.Connection);
					this._studentsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
					this._studentsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
					if (this._studentsTableAdapter.Adapter.AcceptChangesDuringUpdate)
					{
						this._studentsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
						adaptersWithAcceptChangesDuringUpdate.Add(this._studentsTableAdapter.Adapter);
					}
				}
				if ((this._typesTableAdapter != null))
				{
					revertConnections.Add(this._typesTableAdapter, this._typesTableAdapter.Connection);
					this._typesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
					this._typesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
					if (this._typesTableAdapter.Adapter.AcceptChangesDuringUpdate)
					{
						this._typesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
						adaptersWithAcceptChangesDuringUpdate.Add(this._typesTableAdapter.Adapter);
					}
				}
				// 
				//---- Perform updates -----------
				//
				if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete))
				{
					result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
					result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
				}
				else
				{
					result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
					result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
				}
				result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
				// 
				//---- Commit updates -----------
				//
				workTransaction.Commit();
				if ((0 < allAddedRows.Count))
				{
					global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
					allAddedRows.CopyTo(rows);
					for (int i = 0; (i < rows.Length); i = (i + 1))
					{
						global::System.Data.DataRow row = rows[i];
						row.AcceptChanges();
					}
				}
				if ((0 < allChangedRows.Count))
				{
					global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
					allChangedRows.CopyTo(rows);
					for (int i = 0; (i < rows.Length); i = (i + 1))
					{
						global::System.Data.DataRow row = rows[i];
						row.AcceptChanges();
					}
				}
			}
			catch (global::System.Exception ex)
			{
				workTransaction.Rollback();
				// ---- Restore the dataset -----------
				if (this.BackupDataSetBeforeUpdate)
				{
					global::System.Diagnostics.Debug.Assert((backupDataSet != null));
					dataSet.Clear();
					dataSet.Merge(backupDataSet);
				}
				else
				{
					if ((0 < allAddedRows.Count))
					{
						global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
						allAddedRows.CopyTo(rows);
						for (int i = 0; (i < rows.Length); i = (i + 1))
						{
							global::System.Data.DataRow row = rows[i];
							row.AcceptChanges();
							row.SetAdded();
						}
					}
				}
				throw ex;
			}
			finally
			{
				if (workConnOpened)
				{
					workConnection.Close();
				}
				if ((this._authorsTableAdapter != null))
				{
					this._authorsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._authorsTableAdapter]));
					this._authorsTableAdapter.Transaction = null;
				}
				if ((this._booksTableAdapter != null))
				{
					this._booksTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._booksTableAdapter]));
					this._booksTableAdapter.Transaction = null;
				}
				if ((this._borrowsTableAdapter != null))
				{
					this._borrowsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._borrowsTableAdapter]));
					this._borrowsTableAdapter.Transaction = null;
				}
				if ((this._studentsTableAdapter != null))
				{
					this._studentsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._studentsTableAdapter]));
					this._studentsTableAdapter.Transaction = null;
				}
				if ((this._typesTableAdapter != null))
				{
					this._typesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._typesTableAdapter]));
					this._typesTableAdapter.Transaction = null;
				}
				if ((0 < adaptersWithAcceptChangesDuringUpdate.Count))
				{
					global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
					adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
					for (int i = 0; (i < adapters.Length); i = (i + 1))
					{
						global::System.Data.Common.DataAdapter adapter = adapters[i];
						adapter.AcceptChangesDuringUpdate = true;
					}
				}
			}
			return result;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst)
		{
			global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection)
		{
			if ((this._connection != null))
			{
				return true;
			}
			if (((this.Connection == null)
						|| (inputConnection == null)))
			{
				return true;
			}
			if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal))
			{
				return true;
			}
			return false;
		}

		/// <summary>
		///Update Order Option
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public enum UpdateOrderOption
		{

			InsertUpdateDelete = 0,

			UpdateInsertDelete = 1,
		}

		/// <summary>
		///Used to sort self-referenced table's rows
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow>
		{

			private global::System.Data.DataRelation _relation;

			private int _childFirst;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst)
			{
				this._relation = relation;
				if (childFirst)
				{
					this._childFirst = -1;
				}
				else
				{
					this._childFirst = 1;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance)
			{
				global::System.Diagnostics.Debug.Assert((row != null));
				global::System.Data.DataRow root = row;
				distance = 0;

				global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
				traversedRows[row] = row;

				global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
				for (
				; ((parent != null)
							&& (traversedRows.ContainsKey(parent) == false));
				)
				{
					distance = (distance + 1);
					root = parent;
					traversedRows[parent] = parent;
					parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
				}

				if ((distance == 0))
				{
					traversedRows.Clear();
					traversedRows[row] = row;
					parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
					for (
					; ((parent != null)
								&& (traversedRows.ContainsKey(parent) == false));
					)
					{
						distance = (distance + 1);
						root = parent;
						traversedRows[parent] = parent;
						parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
					}
				}

				return root;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2)
			{
				if (object.ReferenceEquals(row1, row2))
				{
					return 0;
				}
				if ((row1 == null))
				{
					return -1;
				}
				if ((row2 == null))
				{
					return 1;
				}

				int distance1 = 0;
				global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

				int distance2 = 0;
				global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

				if (object.ReferenceEquals(root1, root2))
				{
					return (this._childFirst * distance1.CompareTo(distance2));
				}
				else
				{
					global::System.Diagnostics.Debug.Assert(((root1.Table != null)
									&& (root2.Table != null)));
					if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)))
					{
						return -1;
					}
					else
					{
						return 1;
					}
				}
			}
		}
	}
}

#pragma warning restore 1591