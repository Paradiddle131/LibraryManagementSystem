//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LibraryManagementSystem.Data.Datasets
{


	/// <summary>
	///Represents a strongly typed in-memory cache of data.
	///</summary>
	[global::System.Serializable()]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
	[global::System.Xml.Serialization.XmlRootAttribute("libraryDBDataSet6")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
	public partial class libraryDBDataSet6 : global::System.Data.DataSet
	{

		private BookIssueTableDataTable tableBookIssueTable;

		private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public libraryDBDataSet6()
		{
			this.BeginInit();
			this.InitClass();
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			base.Relations.CollectionChanged += schemaChangedHandler;
			this.EndInit();
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected libraryDBDataSet6(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
				base(info, context, false)
		{
			if ((this.IsBinarySerialized(info, context) == true))
			{
				this.InitVars(false);
				global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
				this.Tables.CollectionChanged += schemaChangedHandler1;
				this.Relations.CollectionChanged += schemaChangedHandler1;
				return;
			}
			string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
			if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
			{
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
				if ((ds.Tables["BookIssueTable"] != null))
				{
					base.Tables.Add(new BookIssueTableDataTable(ds.Tables["BookIssueTable"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
			}
			this.GetSerializationData(info, context);
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public BookIssueTableDataTable BookIssueTable
		{
			get
			{
				return this.tableBookIssueTable;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.BrowsableAttribute(true)]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
		public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
		{
			get
			{
				return this._schemaSerializationMode;
			}
			set
			{
				this._schemaSerializationMode = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
		public new global::System.Data.DataTableCollection Tables
		{
			get
			{
				return base.Tables;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
		public new global::System.Data.DataRelationCollection Relations
		{
			get
			{
				return base.Relations;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override void InitializeDerivedDataSet()
		{
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public override global::System.Data.DataSet Clone()
		{
			libraryDBDataSet6 cln = ((libraryDBDataSet6)(base.Clone()));
			cln.InitVars();
			cln.SchemaSerializationMode = this.SchemaSerializationMode;
			return cln;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override bool ShouldSerializeTables()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override bool ShouldSerializeRelations()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
		{
			if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
			{
				this.Reset();
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXml(reader);
				if ((ds.Tables["BookIssueTable"] != null))
				{
					base.Tables.Add(new BookIssueTableDataTable(ds.Tables["BookIssueTable"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXml(reader);
				this.InitVars();
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
		{
			global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
			this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
			stream.Position = 0;
			return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal void InitVars()
		{
			this.InitVars(true);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal void InitVars(bool initTable)
		{
			this.tableBookIssueTable = ((BookIssueTableDataTable)(base.Tables["BookIssueTable"]));
			if ((initTable == true))
			{
				if ((this.tableBookIssueTable != null))
				{
					this.tableBookIssueTable.InitVars();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitClass()
		{
			this.DataSetName = "libraryDBDataSet6";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/libraryDBDataSet6.xsd";
			this.EnforceConstraints = true;
			this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
			this.tableBookIssueTable = new BookIssueTableDataTable();
			base.Tables.Add(this.tableBookIssueTable);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private bool ShouldSerializeBookIssueTable()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
		{
			if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
			{
				this.InitVars();
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
		{
			libraryDBDataSet6 ds = new libraryDBDataSet6();
			global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
			global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
			global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
			any.Namespace = ds.Namespace;
			sequence.Items.Add(any);
			type.Particle = sequence;
			global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
			if (xs.Contains(dsSchema.TargetNamespace))
			{
				global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
				global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
				try
				{
					global::System.Xml.Schema.XmlSchema schema = null;
					dsSchema.Write(s1);
					for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
					{
						schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
						s2.SetLength(0);
						schema.Write(s2);
						if ((s1.Length == s2.Length))
						{
							s1.Position = 0;
							s2.Position = 0;
							for (; ((s1.Position != s1.Length)
										&& (s1.ReadByte() == s2.ReadByte()));)
							{
								;
							}
							if ((s1.Position == s1.Length))
							{
								return type;
							}
						}
					}
				}
				finally
				{
					if ((s1 != null))
					{
						s1.Close();
					}
					if ((s2 != null))
					{
						s2.Close();
					}
				}
			}
			xs.Add(dsSchema);
			return type;
		}

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public delegate void BookIssueTableRowChangeEventHandler(object sender, BookIssueTableRowChangeEvent e);

		/// <summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable()]
		[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class BookIssueTableDataTable : global::System.Data.TypedTableBase<BookIssueTableRow>
		{

			private global::System.Data.DataColumn columnID;

			private global::System.Data.DataColumn columnStudentName;

			private global::System.Data.DataColumn columnSurname;

			private global::System.Data.DataColumn columnBookName;

			private global::System.Data.DataColumn columnBookAuthor;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public BookIssueTableDataTable()
			{
				this.TableName = "BookIssueTable";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal BookIssueTableDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if ((table.CaseSensitive != table.DataSet.CaseSensitive))
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace))
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected BookIssueTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
					base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn IDColumn
			{
				get
				{
					return this.columnID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn StudentNameColumn
			{
				get
				{
					return this.columnStudentName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn SurnameColumn
			{
				get
				{
					return this.columnSurname;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn BookNameColumn
			{
				get
				{
					return this.columnBookName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataColumn BookAuthorColumn
			{
				get
				{
					return this.columnBookAuthor;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			[global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public BookIssueTableRow this[int index]
			{
				get
				{
					return ((BookIssueTableRow)(this.Rows[index]));
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event BookIssueTableRowChangeEventHandler BookIssueTableRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event BookIssueTableRowChangeEventHandler BookIssueTableRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event BookIssueTableRowChangeEventHandler BookIssueTableRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public event BookIssueTableRowChangeEventHandler BookIssueTableRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void AddBookIssueTableRow(BookIssueTableRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public BookIssueTableRow AddBookIssueTableRow(string StudentName, string Surname, string BookName, string BookAuthor)
			{
				BookIssueTableRow rowBookIssueTableRow = ((BookIssueTableRow)(this.NewRow()));
				object[] columnValuesArray = new object[] {
						null,
						StudentName,
						Surname,
						BookName,
						BookAuthor};
				rowBookIssueTableRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowBookIssueTableRow);
				return rowBookIssueTableRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public BookIssueTableRow FindByID(int ID)
			{
				return ((BookIssueTableRow)(this.Rows.Find(new object[] {
							ID})));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				BookIssueTableDataTable cln = ((BookIssueTableDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new BookIssueTableDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal void InitVars()
			{
				this.columnID = base.Columns["ID"];
				this.columnStudentName = base.Columns["StudentName"];
				this.columnSurname = base.Columns["Surname"];
				this.columnBookName = base.Columns["BookName"];
				this.columnBookAuthor = base.Columns["BookAuthor"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			private void InitClass()
			{
				this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnID);
				this.columnStudentName = new global::System.Data.DataColumn("StudentName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnStudentName);
				this.columnSurname = new global::System.Data.DataColumn("Surname", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnSurname);
				this.columnBookName = new global::System.Data.DataColumn("BookName", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnBookName);
				this.columnBookAuthor = new global::System.Data.DataColumn("BookAuthor", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnBookAuthor);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
								this.columnID}, true));
				this.columnID.AutoIncrement = true;
				this.columnID.AutoIncrementSeed = -1;
				this.columnID.AutoIncrementStep = -1;
				this.columnID.AllowDBNull = false;
				this.columnID.ReadOnly = true;
				this.columnID.Unique = true;
				this.columnStudentName.AllowDBNull = false;
				this.columnStudentName.MaxLength = 50;
				this.columnSurname.AllowDBNull = false;
				this.columnSurname.MaxLength = 50;
				this.columnBookName.AllowDBNull = false;
				this.columnBookName.MaxLength = 50;
				this.columnBookAuthor.AllowDBNull = false;
				this.columnBookAuthor.MaxLength = 50;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public BookIssueTableRow NewBookIssueTableRow()
			{
				return ((BookIssueTableRow)(this.NewRow()));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new BookIssueTableRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(BookIssueTableRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.BookIssueTableRowChanged != null))
				{
					this.BookIssueTableRowChanged(this, new BookIssueTableRowChangeEvent(((BookIssueTableRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.BookIssueTableRowChanging != null))
				{
					this.BookIssueTableRowChanging(this, new BookIssueTableRowChangeEvent(((BookIssueTableRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.BookIssueTableRowDeleted != null))
				{
					this.BookIssueTableRowDeleted(this, new BookIssueTableRowChangeEvent(((BookIssueTableRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.BookIssueTableRowDeleting != null))
				{
					this.BookIssueTableRowDeleting(this, new BookIssueTableRowChangeEvent(((BookIssueTableRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public void RemoveBookIssueTableRow(BookIssueTableRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				libraryDBDataSet6 ds = new libraryDBDataSet6();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "BookIssueTableDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
						{
							schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
							s2.SetLength(0);
							schema.Write(s2);
							if ((s1.Length == s2.Length))
							{
								s1.Position = 0;
								s2.Position = 0;
								for (; ((s1.Position != s1.Length)
											&& (s1.ReadByte() == s2.ReadByte()));)
								{
									;
								}
								if ((s1.Position == s1.Length))
								{
									return type;
								}
							}
						}
					}
					finally
					{
						if ((s1 != null))
						{
							s1.Close();
						}
						if ((s2 != null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		/// <summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class BookIssueTableRow : global::System.Data.DataRow
		{

			private BookIssueTableDataTable tableBookIssueTable;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal BookIssueTableRow(global::System.Data.DataRowBuilder rb) :
					base(rb)
			{
				this.tableBookIssueTable = ((BookIssueTableDataTable)(this.Table));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int ID
			{
				get
				{
					return ((int)(this[this.tableBookIssueTable.IDColumn]));
				}
				set
				{
					this[this.tableBookIssueTable.IDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string StudentName
			{
				get
				{
					return ((string)(this[this.tableBookIssueTable.StudentNameColumn]));
				}
				set
				{
					this[this.tableBookIssueTable.StudentNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string Surname
			{
				get
				{
					return ((string)(this[this.tableBookIssueTable.SurnameColumn]));
				}
				set
				{
					this[this.tableBookIssueTable.SurnameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string BookName
			{
				get
				{
					return ((string)(this[this.tableBookIssueTable.BookNameColumn]));
				}
				set
				{
					this[this.tableBookIssueTable.BookNameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public string BookAuthor
			{
				get
				{
					return ((string)(this[this.tableBookIssueTable.BookAuthorColumn]));
				}
				set
				{
					this[this.tableBookIssueTable.BookAuthorColumn] = value;
				}
			}
		}

		/// <summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public class BookIssueTableRowChangeEvent : global::System.EventArgs
		{

			private BookIssueTableRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public BookIssueTableRowChangeEvent(BookIssueTableRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public BookIssueTableRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
	}
}
namespace LibraryManagementSystem.Data.Datasets.libraryDBDataSet6TableAdapters
{


	/// <summary>
	///Represents the connection and commands used to retrieve and save data.
	///</summary>
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.ComponentModel.DataObjectAttribute(true)]
	[global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
	public partial class BookIssueTableTableAdapter : global::System.ComponentModel.Component
	{

		private global::System.Data.SqlClient.SqlDataAdapter _adapter;

		private global::System.Data.SqlClient.SqlConnection _connection;

		private global::System.Data.SqlClient.SqlTransaction _transaction;

		private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

		private bool _clearBeforeFill;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public BookIssueTableTableAdapter()
		{
			this.ClearBeforeFill = true;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
		{
			get
			{
				if ((this._adapter == null))
				{
					this.InitAdapter();
				}
				return this._adapter;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlConnection Connection
		{
			get
			{
				if ((this._connection == null))
				{
					this.InitConnection();
				}
				return this._connection;
			}
			set
			{
				this._connection = value;
				if ((this.Adapter.InsertCommand != null))
				{
					this.Adapter.InsertCommand.Connection = value;
				}
				if ((this.Adapter.DeleteCommand != null))
				{
					this.Adapter.DeleteCommand.Connection = value;
				}
				if ((this.Adapter.UpdateCommand != null))
				{
					this.Adapter.UpdateCommand.Connection = value;
				}
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					if ((this.CommandCollection[i] != null))
					{
						((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
					}
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		internal global::System.Data.SqlClient.SqlTransaction Transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				this._transaction = value;
				for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
				{
					this.CommandCollection[i].Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.DeleteCommand != null)))
				{
					this.Adapter.DeleteCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.InsertCommand != null)))
				{
					this.Adapter.InsertCommand.Transaction = this._transaction;
				}
				if (((this.Adapter != null)
							&& (this.Adapter.UpdateCommand != null)))
				{
					this.Adapter.UpdateCommand.Transaction = this._transaction;
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
		{
			get
			{
				if ((this._commandCollection == null))
				{
					this.InitCommandCollection();
				}
				return this._commandCollection;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public bool ClearBeforeFill
		{
			get
			{
				return this._clearBeforeFill;
			}
			set
			{
				this._clearBeforeFill = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitAdapter()
		{
			this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
			global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
			tableMapping.SourceTable = "Table";
			tableMapping.DataSetTable = "BookIssueTable";
			tableMapping.ColumnMappings.Add("ID", "ID");
			tableMapping.ColumnMappings.Add("StudentName", "StudentName");
			tableMapping.ColumnMappings.Add("Surname", "Surname");
			tableMapping.ColumnMappings.Add("BookName", "BookName");
			tableMapping.ColumnMappings.Add("BookAuthor", "BookAuthor");
			this._adapter.TableMappings.Add(tableMapping);
			this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.DeleteCommand.Connection = this.Connection;
			this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BookIssueTable] WHERE (([ID] = @Original_ID) AND ([StudentName" +
				"] = @Original_StudentName) AND ([Surname] = @Original_Surname) AND ([BookName] =" +
				" @Original_BookName) AND ([BookAuthor] = @Original_BookAuthor))";
			this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookAuthor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookAuthor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.InsertCommand.Connection = this.Connection;
			this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BookIssueTable] ([StudentName], [Surname], [BookName], [BookAu" +
				"thor]) VALUES (@StudentName, @Surname, @BookName, @BookAuthor);\nSELECT ID, Stude" +
				"ntName, Surname, BookName, BookAuthor FROM BookIssueTable WHERE (ID = SCOPE_IDEN" +
				"TITY())";
			this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookAuthor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookAuthor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
			this._adapter.UpdateCommand.Connection = this.Connection;
			this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BookIssueTable] SET [StudentName] = @StudentName, [Surname] = @Surname, [BookName] = @BookName, [BookAuthor] = @BookAuthor WHERE (([ID] = @Original_ID) AND ([StudentName] = @Original_StudentName) AND ([Surname] = @Original_Surname) AND ([BookName] = @Original_BookName) AND ([BookAuthor] = @Original_BookAuthor));
SELECT ID, StudentName, Surname, BookName, BookAuthor FROM BookIssueTable WHERE (ID = @ID)";
			this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookAuthor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookAuthor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StudentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StudentName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BookAuthor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BookAuthor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
			this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitConnection()
		{
			this._connection = new global::System.Data.SqlClient.SqlConnection();
			this._connection.ConnectionString = global::LibraryManagementSystem.Properties.Settings.Default.libraryDBConnectionString;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private void InitCommandCollection()
		{
			this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
			this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
			this._commandCollection[0].Connection = this.Connection;
			this._commandCollection[0].CommandText = "SELECT ID, StudentName, Surname, BookName, BookAuthor FROM dbo.BookIssueTable";
			this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
		public virtual int Fill(libraryDBDataSet6.BookIssueTableDataTable dataTable)
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			if ((this.ClearBeforeFill == true))
			{
				dataTable.Clear();
			}
			int returnValue = this.Adapter.Fill(dataTable);
			return returnValue;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
		public virtual libraryDBDataSet6.BookIssueTableDataTable GetData()
		{
			this.Adapter.SelectCommand = this.CommandCollection[0];
			libraryDBDataSet6.BookIssueTableDataTable dataTable = new libraryDBDataSet6.BookIssueTableDataTable();
			this.Adapter.Fill(dataTable);
			return dataTable;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDBDataSet6.BookIssueTableDataTable dataTable)
		{
			return this.Adapter.Update(dataTable);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(libraryDBDataSet6 dataSet)
		{
			return this.Adapter.Update(dataSet, "BookIssueTable");
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow dataRow)
		{
			return this.Adapter.Update(new global::System.Data.DataRow[] {
						dataRow});
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		public virtual int Update(global::System.Data.DataRow[] dataRows)
		{
			return this.Adapter.Update(dataRows);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
		public virtual int Delete(int Original_ID, string Original_StudentName, string Original_Surname, string Original_BookName, string Original_BookAuthor)
		{
			this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
			if ((Original_StudentName == null))
			{
				throw new global::System.ArgumentNullException("Original_StudentName");
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_StudentName));
			}
			if ((Original_Surname == null))
			{
				throw new global::System.ArgumentNullException("Original_Surname");
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Surname));
			}
			if ((Original_BookName == null))
			{
				throw new global::System.ArgumentNullException("Original_BookName");
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_BookName));
			}
			if ((Original_BookAuthor == null))
			{
				throw new global::System.ArgumentNullException("Original_BookAuthor");
			}
			else
			{
				this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BookAuthor));
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
			if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.DeleteCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.DeleteCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
		public virtual int Insert(string StudentName, string Surname, string BookName, string BookAuthor)
		{
			if ((StudentName == null))
			{
				throw new global::System.ArgumentNullException("StudentName");
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[0].Value = ((string)(StudentName));
			}
			if ((Surname == null))
			{
				throw new global::System.ArgumentNullException("Surname");
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Surname));
			}
			if ((BookName == null))
			{
				throw new global::System.ArgumentNullException("BookName");
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BookName));
			}
			if ((BookAuthor == null))
			{
				throw new global::System.ArgumentNullException("BookAuthor");
			}
			else
			{
				this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BookAuthor));
			}
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
			if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.InsertCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.InsertCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string StudentName, string Surname, string BookName, string BookAuthor, int Original_ID, string Original_StudentName, string Original_Surname, string Original_BookName, string Original_BookAuthor, int ID)
		{
			if ((StudentName == null))
			{
				throw new global::System.ArgumentNullException("StudentName");
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(StudentName));
			}
			if ((Surname == null))
			{
				throw new global::System.ArgumentNullException("Surname");
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Surname));
			}
			if ((BookName == null))
			{
				throw new global::System.ArgumentNullException("BookName");
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BookName));
			}
			if ((BookAuthor == null))
			{
				throw new global::System.ArgumentNullException("BookAuthor");
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BookAuthor));
			}
			this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
			if ((Original_StudentName == null))
			{
				throw new global::System.ArgumentNullException("Original_StudentName");
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_StudentName));
			}
			if ((Original_Surname == null))
			{
				throw new global::System.ArgumentNullException("Original_Surname");
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Surname));
			}
			if ((Original_BookName == null))
			{
				throw new global::System.ArgumentNullException("Original_BookName");
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_BookName));
			}
			if ((Original_BookAuthor == null))
			{
				throw new global::System.ArgumentNullException("Original_BookAuthor");
			}
			else
			{
				this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_BookAuthor));
			}
			this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID));
			global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
			if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
						!= global::System.Data.ConnectionState.Open))
			{
				this.Adapter.UpdateCommand.Connection.Open();
			}
			try
			{
				int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
				return returnValue;
			}
			finally
			{
				if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
				{
					this.Adapter.UpdateCommand.Connection.Close();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
		[global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
		public virtual int Update(string StudentName, string Surname, string BookName, string BookAuthor, int Original_ID, string Original_StudentName, string Original_Surname, string Original_BookName, string Original_BookAuthor)
		{
			return this.Update(StudentName, Surname, BookName, BookAuthor, Original_ID, Original_StudentName, Original_Surname, Original_BookName, Original_BookAuthor, Original_ID);
		}
	}

	/// <summary>
	///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
	///</summary>
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
		"esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
	public partial class TableAdapterManager : global::System.ComponentModel.Component
	{

		private UpdateOrderOption _updateOrder;

		private BookIssueTableTableAdapter _bookIssueTableTableAdapter;

		private bool _backupDataSetBeforeUpdate;

		private global::System.Data.IDbConnection _connection;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public UpdateOrderOption UpdateOrder
		{
			get
			{
				return this._updateOrder;
			}
			set
			{
				this._updateOrder = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
			"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
			"a", "System.Drawing.Design.UITypeEditor")]
		public BookIssueTableTableAdapter BookIssueTableTableAdapter
		{
			get
			{
				return this._bookIssueTableTableAdapter;
			}
			set
			{
				this._bookIssueTableTableAdapter = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public bool BackupDataSetBeforeUpdate
		{
			get
			{
				return this._backupDataSetBeforeUpdate;
			}
			set
			{
				this._backupDataSetBeforeUpdate = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		public global::System.Data.IDbConnection Connection
		{
			get
			{
				if ((this._connection != null))
				{
					return this._connection;
				}
				if (((this._bookIssueTableTableAdapter != null)
							&& (this._bookIssueTableTableAdapter.Connection != null)))
				{
					return this._bookIssueTableTableAdapter.Connection;
				}
				return null;
			}
			set
			{
				this._connection = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		public int TableAdapterInstanceCount
		{
			get
			{
				int count = 0;
				if ((this._bookIssueTableTableAdapter != null))
				{
					count = (count + 1);
				}
				return count;
			}
		}

		/// <summary>
		///Update rows in top-down order.
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private int UpdateUpdatedRows(libraryDBDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
		{
			int result = 0;
			if ((this._bookIssueTableTableAdapter != null))
			{
				global::System.Data.DataRow[] updatedRows = dataSet.BookIssueTable.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
				updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
				if (((updatedRows != null)
							&& (0 < updatedRows.Length)))
				{
					result = (result + this._bookIssueTableTableAdapter.Update(updatedRows));
					allChangedRows.AddRange(updatedRows);
				}
			}
			return result;
		}

		/// <summary>
		///Insert rows in top-down order.
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private int UpdateInsertedRows(libraryDBDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
		{
			int result = 0;
			if ((this._bookIssueTableTableAdapter != null))
			{
				global::System.Data.DataRow[] addedRows = dataSet.BookIssueTable.Select(null, null, global::System.Data.DataViewRowState.Added);
				if (((addedRows != null)
							&& (0 < addedRows.Length)))
				{
					result = (result + this._bookIssueTableTableAdapter.Update(addedRows));
					allAddedRows.AddRange(addedRows);
				}
			}
			return result;
		}

		/// <summary>
		///Delete rows in bottom-up order.
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private int UpdateDeletedRows(libraryDBDataSet6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows)
		{
			int result = 0;
			if ((this._bookIssueTableTableAdapter != null))
			{
				global::System.Data.DataRow[] deletedRows = dataSet.BookIssueTable.Select(null, null, global::System.Data.DataViewRowState.Deleted);
				if (((deletedRows != null)
							&& (0 < deletedRows.Length)))
				{
					result = (result + this._bookIssueTableTableAdapter.Update(deletedRows));
					allChangedRows.AddRange(deletedRows);
				}
			}
			return result;
		}

		/// <summary>
		///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
		{
			if (((updatedRows == null)
						|| (updatedRows.Length < 1)))
			{
				return updatedRows;
			}
			if (((allAddedRows == null)
						|| (allAddedRows.Count < 1)))
			{
				return updatedRows;
			}
			global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
			for (int i = 0; (i < updatedRows.Length); i = (i + 1))
			{
				global::System.Data.DataRow row = updatedRows[i];
				if ((allAddedRows.Contains(row) == false))
				{
					realUpdatedRows.Add(row);
				}
			}
			return realUpdatedRows.ToArray();
		}

		/// <summary>
		///Update all changes to the dataset.
		///</summary>
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public virtual int UpdateAll(libraryDBDataSet6 dataSet)
		{
			if ((dataSet == null))
			{
				throw new global::System.ArgumentNullException("dataSet");
			}
			if ((dataSet.HasChanges() == false))
			{
				return 0;
			}
			if (((this._bookIssueTableTableAdapter != null)
						&& (this.MatchTableAdapterConnection(this._bookIssueTableTableAdapter.Connection) == false)))
			{
				throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
						"tring.");
			}
			global::System.Data.IDbConnection workConnection = this.Connection;
			if ((workConnection == null))
			{
				throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
						"ger TableAdapter property to a valid TableAdapter instance.");
			}
			bool workConnOpened = false;
			if (((workConnection.State & global::System.Data.ConnectionState.Broken)
						== global::System.Data.ConnectionState.Broken))
			{
				workConnection.Close();
			}
			if ((workConnection.State == global::System.Data.ConnectionState.Closed))
			{
				workConnection.Open();
				workConnOpened = true;
			}
			global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
			if ((workTransaction == null))
			{
				throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
						"ctions or the current state is not allowing the transaction to begin.");
			}
			global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
			global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
			global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
			global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
			int result = 0;
			global::System.Data.DataSet backupDataSet = null;
			if (this.BackupDataSetBeforeUpdate)
			{
				backupDataSet = new global::System.Data.DataSet();
				backupDataSet.Merge(dataSet);
			}
			try
			{
				// ---- Prepare for update -----------
				//
				if ((this._bookIssueTableTableAdapter != null))
				{
					revertConnections.Add(this._bookIssueTableTableAdapter, this._bookIssueTableTableAdapter.Connection);
					this._bookIssueTableTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
					this._bookIssueTableTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
					if (this._bookIssueTableTableAdapter.Adapter.AcceptChangesDuringUpdate)
					{
						this._bookIssueTableTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
						adaptersWithAcceptChangesDuringUpdate.Add(this._bookIssueTableTableAdapter.Adapter);
					}
				}
				// 
				//---- Perform updates -----------
				//
				if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete))
				{
					result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
					result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
				}
				else
				{
					result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
					result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
				}
				result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
				// 
				//---- Commit updates -----------
				//
				workTransaction.Commit();
				if ((0 < allAddedRows.Count))
				{
					global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
					allAddedRows.CopyTo(rows);
					for (int i = 0; (i < rows.Length); i = (i + 1))
					{
						global::System.Data.DataRow row = rows[i];
						row.AcceptChanges();
					}
				}
				if ((0 < allChangedRows.Count))
				{
					global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
					allChangedRows.CopyTo(rows);
					for (int i = 0; (i < rows.Length); i = (i + 1))
					{
						global::System.Data.DataRow row = rows[i];
						row.AcceptChanges();
					}
				}
			}
			catch (global::System.Exception ex)
			{
				workTransaction.Rollback();
				// ---- Restore the dataset -----------
				if (this.BackupDataSetBeforeUpdate)
				{
					global::System.Diagnostics.Debug.Assert((backupDataSet != null));
					dataSet.Clear();
					dataSet.Merge(backupDataSet);
				}
				else
				{
					if ((0 < allAddedRows.Count))
					{
						global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
						allAddedRows.CopyTo(rows);
						for (int i = 0; (i < rows.Length); i = (i + 1))
						{
							global::System.Data.DataRow row = rows[i];
							row.AcceptChanges();
							row.SetAdded();
						}
					}
				}
				throw ex;
			}
			finally
			{
				if (workConnOpened)
				{
					workConnection.Close();
				}
				if ((this._bookIssueTableTableAdapter != null))
				{
					this._bookIssueTableTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bookIssueTableTableAdapter]));
					this._bookIssueTableTableAdapter.Transaction = null;
				}
				if ((0 < adaptersWithAcceptChangesDuringUpdate.Count))
				{
					global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
					adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
					for (int i = 0; (i < adapters.Length); i = (i + 1))
					{
						global::System.Data.Common.DataAdapter adapter = adapters[i];
						adapter.AcceptChangesDuringUpdate = true;
					}
				}
			}
			return result;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst)
		{
			global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection)
		{
			if ((this._connection != null))
			{
				return true;
			}
			if (((this.Connection == null)
						|| (inputConnection == null)))
			{
				return true;
			}
			if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal))
			{
				return true;
			}
			return false;
		}

		/// <summary>
		///Update Order Option
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		public enum UpdateOrderOption
		{

			InsertUpdateDelete = 0,

			UpdateInsertDelete = 1,
		}

		/// <summary>
		///Used to sort self-referenced table's rows
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
		private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow>
		{

			private global::System.Data.DataRelation _relation;

			private int _childFirst;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst)
			{
				this._relation = relation;
				if (childFirst)
				{
					this._childFirst = -1;
				}
				else
				{
					this._childFirst = 1;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance)
			{
				global::System.Diagnostics.Debug.Assert((row != null));
				global::System.Data.DataRow root = row;
				distance = 0;

				global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
				traversedRows[row] = row;

				global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
				for (
				; ((parent != null)
							&& (traversedRows.ContainsKey(parent) == false));
				)
				{
					distance = (distance + 1);
					root = parent;
					traversedRows[parent] = parent;
					parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
				}

				if ((distance == 0))
				{
					traversedRows.Clear();
					traversedRows[row] = row;
					parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
					for (
					; ((parent != null)
								&& (traversedRows.ContainsKey(parent) == false));
					)
					{
						distance = (distance + 1);
						root = parent;
						traversedRows[parent] = parent;
						parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
					}
				}

				return root;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
			public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2)
			{
				if (object.ReferenceEquals(row1, row2))
				{
					return 0;
				}
				if ((row1 == null))
				{
					return -1;
				}
				if ((row2 == null))
				{
					return 1;
				}

				int distance1 = 0;
				global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

				int distance2 = 0;
				global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

				if (object.ReferenceEquals(root1, root2))
				{
					return (this._childFirst * distance1.CompareTo(distance2));
				}
				else
				{
					global::System.Diagnostics.Debug.Assert(((root1.Table != null)
									&& (root2.Table != null)));
					if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)))
					{
						return -1;
					}
					else
					{
						return 1;
					}
				}
			}
		}
	}
}

#pragma warning restore 1591